;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/21/2022 6:54:11 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2C53      	GOTO       1107
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x00A7      	MOVWF      ___saveSTATUS
0x0009	0x080A      	MOVF       PCLATH, 0
0x000A	0x00A8      	MOVWF      ___savePCLATH
0x000B	0x018A      	CLRF       PCLATH
0x000C	0x0870      	MOVF       R0, 0
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x00A1      	MOVWF      33
0x000F	0x0871      	MOVF       R1, 0
0x0010	0x00A0      	MOVWF      32
;Slave.c,302 :: 		void interrupt() // prekidi serijske komunikacije i tajmer1
;Slave.c,304 :: 		if ((PIE1.TMR1IE) && (PIR1.TMR1IF))
0x0011	0x1683      	BSF        STATUS, 5
0x0012	0x1C0C      	BTFSS      PIE1, 0
0x0013	0x283D      	GOTO       L_interrupt62
0x0014	0x1283      	BCF        STATUS, 5
0x0015	0x1C0C      	BTFSS      PIR1, 0
0x0016	0x283D      	GOTO       L_interrupt62
L__interrupt100:
;Slave.c,307 :: 		PIR1.TMR1IF = 0;
0x0017	0x100C      	BCF        PIR1, 0
;Slave.c,308 :: 		if (br == 0x09)
0x0018	0x1683      	BSF        STATUS, 5
0x0019	0x0822      	MOVF       _br, 0
0x001A	0x3A09      	XORLW      9
0x001B	0x1D03      	BTFSS      STATUS, 2
0x001C	0x2820      	GOTO       L_interrupt63
;Slave.c,310 :: 		br = 0x00;
0x001D	0x01A2      	CLRF       _br
;Slave.c,311 :: 		Flag1 = 0x01; // podigo se flag koji govori da je doslo vreme da se prozove slave(prostorija)
0x001E	0x14A5      	BSF        _Flag1, BitPos(_Flag1+0)
;Slave.c,312 :: 		}
0x001F	0x2821      	GOTO       L_interrupt64
L_interrupt63:
;Slave.c,314 :: 		br++;
0x0020	0x0AA2      	INCF       _br, 1
L_interrupt64:
;Slave.c,316 :: 		if (tt > 0) // treperenje tastera
0x0021	0x0821      	MOVF       _tt, 0
0x0022	0x3C00      	SUBLW      0
0x0023	0x1803      	BTFSC      STATUS, 0
0x0024	0x2826      	GOTO       L_interrupt65
;Slave.c,317 :: 		tt--;
0x0025	0x03A1      	DECF       _tt, 1
L_interrupt65:
;Slave.c,318 :: 		if (DISPLAY && (!tt)) // menjanje displeja
0x0026	0x1283      	BCF        STATUS, 5
0x0027	0x1D86      	BTFSS      PORTB, 3
0x0028	0x2838      	GOTO       L_interrupt68
0x0029	0x1683      	BSF        STATUS, 5
0x002A	0x0821      	MOVF       _tt, 0
0x002B	0x1D03      	BTFSS      STATUS, 2
0x002C	0x2838      	GOTO       L_interrupt68
L__interrupt99:
;Slave.c,320 :: 		if (displej < 1)
0x002D	0x3001      	MOVLW      1
0x002E	0x1283      	BCF        STATUS, 5
0x002F	0x0228      	SUBWF      _displej, 0
0x0030	0x1803      	BTFSC      STATUS, 0
0x0031	0x2834      	GOTO       L_interrupt69
;Slave.c,321 :: 		displej++;
0x0032	0x0AA8      	INCF       _displej, 1
0x0033	0x2835      	GOTO       L_interrupt70
L_interrupt69:
;Slave.c,323 :: 		displej = 0;
0x0034	0x01A8      	CLRF       _displej
L_interrupt70:
;Slave.c,324 :: 		tt = 4;
0x0035	0x3004      	MOVLW      4
0x0036	0x1683      	BSF        STATUS, 5
0x0037	0x00A1      	MOVWF      _tt
;Slave.c,325 :: 		}
L_interrupt68:
;Slave.c,326 :: 		TMR1H = 0x0B; // startne vrednosti za tajmer1
0x0038	0x300B      	MOVLW      11
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x008F      	MOVWF      TMR1H
;Slave.c,327 :: 		TMR1L = 0xDC;
0x003B	0x30DC      	MOVLW      220
0x003C	0x008E      	MOVWF      TMR1L
;Slave.c,328 :: 		}
L_interrupt62:
;Slave.c,330 :: 		if ((PIE1.RCIE) && (PIR1.RCIF)) // prekid zbog serijske komunikacije
0x003D	0x1683      	BSF        STATUS, 5
0x003E	0x1E8C      	BTFSS      PIE1, 5
0x003F	0x285B      	GOTO       L_interrupt73
0x0040	0x1283      	BCF        STATUS, 5
0x0041	0x1E8C      	BTFSS      PIR1, 5
0x0042	0x285B      	GOTO       L_interrupt73
L__interrupt98:
;Slave.c,332 :: 		ch = RCREG; // citanje primljenog bajta
0x0043	0x081A      	MOVF       RCREG, 0
0x0044	0x00EF      	MOVWF      _ch
;Slave.c,333 :: 		PIR1.RCIF = 0;
0x0045	0x128C      	BCF        PIR1, 5
;Slave.c,334 :: 		if (((ch & 0x1F) == RAMP_ID) && ((ch & 0xE0) == 0xA0))
0x0046	0x301F      	MOVLW      31
0x0047	0x056F      	ANDWF      _ch, 0
0x0048	0x00F1      	MOVWF      R1
0x0049	0x0871      	MOVF       R1, 0
0x004A	0x1683      	BSF        STATUS, 5
0x004B	0x0620      	XORWF      _RAMP_ID, 0
0x004C	0x1D03      	BTFSS      STATUS, 2
0x004D	0x285B      	GOTO       L_interrupt76
0x004E	0x30E0      	MOVLW      224
0x004F	0x1283      	BCF        STATUS, 5
0x0050	0x056F      	ANDWF      _ch, 0
0x0051	0x00F1      	MOVWF      R1
0x0052	0x0871      	MOVF       R1, 0
0x0053	0x3AA0      	XORLW      160
0x0054	0x1D03      	BTFSS      STATUS, 2
0x0055	0x285B      	GOTO       L_interrupt76
L__interrupt97:
;Slave.c,336 :: 		Command = ch;
0x0056	0x086F      	MOVF       _ch, 0
0x0057	0x00ED      	MOVWF      _Command
0x0058	0x01EE      	CLRF       _Command+1
;Slave.c,337 :: 		CallFlag = 1;
0x0059	0x1683      	BSF        STATUS, 5
0x005A	0x1425      	BSF        _CallFlag, BitPos(_CallFlag+0)
;Slave.c,338 :: 		}
L_interrupt76:
;Slave.c,339 :: 		}
L_interrupt73:
;Slave.c,340 :: 		}
L__interrupt117:
0x005B	0x1283      	BCF        STATUS, 5
0x005C	0x0821      	MOVF       33, 0
0x005D	0x00F0      	MOVWF      R0
0x005E	0x0820      	MOVF       32, 0
0x005F	0x00F1      	MOVWF      R1
0x0060	0x1683      	BSF        STATUS, 5
0x0061	0x0828      	MOVF       ___savePCLATH, 0
0x0062	0x008A      	MOVWF      PCLATH
0x0063	0x0E27      	SWAPF      ___saveSTATUS, 0
0x0064	0x0083      	MOVWF      STATUS
0x0065	0x0EFF      	SWAPF      R15, 1
0x0066	0x0E7F      	SWAPF      R15, 0
0x0067	0x0009      	RETFIE
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0068	0x0000      	NOP
0x0069	0x0000      	NOP
0x006A	0x0000      	NOP
0x006B	0x0000      	NOP
0x006C	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
0x006D	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x006E	0x3024      	MOVLW      36
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x1303      	BCF        STATUS, 6
0x0071	0x00FC      	MOVWF      R12
0x0072	0x30B5      	MOVLW      181
0x0073	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0074	0x0BFD      	DECFSZ     R13, 1
0x0075	0x2874      	GOTO       L_Delay_5500us5
0x0076	0x0BFC      	DECFSZ     R12, 1
0x0077	0x2874      	GOTO       L_Delay_5500us5
0x0078	0x0000      	NOP
0x0079	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
0x007A	0x0008      	RETURN
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x007B	0x3053      	MOVLW      83
0x007C	0x1283      	BCF        STATUS, 5
0x007D	0x1303      	BCF        STATUS, 6
0x007E	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x007F	0x0BFD      	DECFSZ     R13, 1
0x0080	0x287F      	GOTO       L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
0x0081	0x0008      	RETURN
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0082	0x1683      	BSF        STATUS, 5
0x0083	0x1303      	BCF        STATUS, 6
0x0084	0x1BAF      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x0085	0x2889      	GOTO       L__Lcd_Cmd21
0x0086	0x1283      	BCF        STATUS, 5
0x0087	0x1388      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0088	0x288B      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0089	0x1283      	BCF        STATUS, 5
0x008A	0x1788      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x008B	0x1683      	BSF        STATUS, 5
0x008C	0x1B2F      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x008D	0x2891      	GOTO       L__Lcd_Cmd23
0x008E	0x1283      	BCF        STATUS, 5
0x008F	0x1308      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0090	0x2893      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0091	0x1283      	BCF        STATUS, 5
0x0092	0x1708      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0093	0x1683      	BSF        STATUS, 5
0x0094	0x1AAF      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0095	0x2899      	GOTO       L__Lcd_Cmd25
0x0096	0x1283      	BCF        STATUS, 5
0x0097	0x1288      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0098	0x289B      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0099	0x1283      	BCF        STATUS, 5
0x009A	0x1688      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x009B	0x1683      	BSF        STATUS, 5
0x009C	0x1A2F      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x009D	0x28A1      	GOTO       L__Lcd_Cmd27
0x009E	0x1283      	BCF        STATUS, 5
0x009F	0x1208      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x00A0	0x28A3      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x00A1	0x1283      	BCF        STATUS, 5
0x00A2	0x1608      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x00A3	0x1683      	BSF        STATUS, 5
0x00A4	0x1926      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00A5	0x28A9      	GOTO       L__Lcd_Cmd29
0x00A6	0x1283      	BCF        STATUS, 5
0x00A7	0x1407      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x00A8	0x28AB      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x1007      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00AB	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x00AC	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00AD	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x00AE	0x1683      	BSF        STATUS, 5
0x00AF	0x19AF      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x00B0	0x28B4      	GOTO       L__Lcd_Cmd31
0x00B1	0x1283      	BCF        STATUS, 5
0x00B2	0x1388      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x00B3	0x28B6      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00B4	0x1283      	BCF        STATUS, 5
0x00B5	0x1788      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00B6	0x1683      	BSF        STATUS, 5
0x00B7	0x192F      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x00B8	0x28BC      	GOTO       L__Lcd_Cmd33
0x00B9	0x1283      	BCF        STATUS, 5
0x00BA	0x1308      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x00BB	0x28BE      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00BC	0x1283      	BCF        STATUS, 5
0x00BD	0x1708      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00BE	0x1683      	BSF        STATUS, 5
0x00BF	0x18AF      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x00C0	0x28C4      	GOTO       L__Lcd_Cmd35
0x00C1	0x1283      	BCF        STATUS, 5
0x00C2	0x1288      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x00C3	0x28C6      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x1688      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00C6	0x1683      	BSF        STATUS, 5
0x00C7	0x182F      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x00C8	0x28CC      	GOTO       L__Lcd_Cmd37
0x00C9	0x1283      	BCF        STATUS, 5
0x00CA	0x1208      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x00CB	0x28CE      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00CC	0x1283      	BCF        STATUS, 5
0x00CD	0x1608      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00CE	0x1683      	BSF        STATUS, 5
0x00CF	0x1926      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00D0	0x28D4      	GOTO       L__Lcd_Cmd39
0x00D1	0x1283      	BCF        STATUS, 5
0x00D2	0x1407      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x00D3	0x28D6      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00D4	0x1283      	BCF        STATUS, 5
0x00D5	0x1007      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00D6	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x00D7	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00D8	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x00D9	0x1683      	BSF        STATUS, 5
0x00DA	0x1D26      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x00DB	0x28DE      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00DC	0x206E      	CALL       _Delay_5500us
0x00DD	0x28DF      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00DE	0x207B      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00DF	0x0008      	RETURN
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00E0	0x1683      	BSF        STATUS, 5
0x00E1	0x1303      	BCF        STATUS, 6
0x00E2	0x1126      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x00E3	0x082E      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x00E4	0x00AF      	MOVWF      FARG_Lcd_Cmd_out_char
0x00E5	0x2082      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x00E6	0x1683      	BSF        STATUS, 5
0x00E7	0x1526      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x00E8	0x0008      	RETURN
; end of _Lcd_Chr_CP
_ad_convert:
;Slave.c,69 :: 		unsigned char ad_convert()
;Slave.c,71 :: 		unsigned int temp = 0x0000;
0x00E9	0x1683      	BSF        STATUS, 5
0x00EA	0x1303      	BCF        STATUS, 6
0x00EB	0x01AA      	CLRF       ad_convert_temp_L0
0x00EC	0x01AB      	CLRF       ad_convert_temp_L0+1
;Slave.c,72 :: 		int i = 0;
0x00ED	0x01AC      	CLRF       ad_convert_i_L0
0x00EE	0x01AD      	CLRF       ad_convert_i_L0+1
;Slave.c,74 :: 		for (i = 1; i < 30; i++)
0x00EF	0x3001      	MOVLW      1
0x00F0	0x00AC      	MOVWF      ad_convert_i_L0
0x00F1	0x3000      	MOVLW      0
0x00F2	0x00AD      	MOVWF      ad_convert_i_L0+1
L_ad_convert2:
0x00F3	0x3080      	MOVLW      128
0x00F4	0x062D      	XORWF      ad_convert_i_L0+1, 0
0x00F5	0x00F0      	MOVWF      R0
0x00F6	0x3080      	MOVLW      128
0x00F7	0x0270      	SUBWF      R0, 0
0x00F8	0x1D03      	BTFSS      STATUS, 2
0x00F9	0x28FC      	GOTO       L__ad_convert101
0x00FA	0x301E      	MOVLW      30
0x00FB	0x022C      	SUBWF      ad_convert_i_L0, 0
L__ad_convert101:
0x00FC	0x1803      	BTFSC      STATUS, 0
0x00FD	0x2902      	GOTO       L_ad_convert3
0x00FE	0x0AAC      	INCF       ad_convert_i_L0, 1
0x00FF	0x1903      	BTFSC      STATUS, 2
0x0100	0x0AAD      	INCF       ad_convert_i_L0+1, 1
;Slave.c,75 :: 		;
0x0101	0x28F3      	GOTO       L_ad_convert2
L_ad_convert3:
;Slave.c,76 :: 		ADCON0.GO_DONE = 1;
0x0102	0x1283      	BCF        STATUS, 5
0x0103	0x151F      	BSF        ADCON0, 2
;Slave.c,77 :: 		while (ADCON0.GO_DONE)
L_ad_convert5:
0x0104	0x1D1F      	BTFSS      ADCON0, 2
0x0105	0x2907      	GOTO       L_ad_convert6
;Slave.c,78 :: 		;
0x0106	0x2904      	GOTO       L_ad_convert5
L_ad_convert6:
;Slave.c,79 :: 		temp = (ADRESH << 8) + ADRESL;
0x0107	0x081E      	MOVF       ADRESH, 0
0x0108	0x00F1      	MOVWF      R0+1
0x0109	0x01F0      	CLRF       R0
0x010A	0x1683      	BSF        STATUS, 5
0x010B	0x081E      	MOVF       ADRESL, 0
0x010C	0x0770      	ADDWF      R0, 0
0x010D	0x00F3      	MOVWF      R3
0x010E	0x0871      	MOVF       R0+1, 0
0x010F	0x1803      	BTFSC      STATUS, 0
0x0110	0x3E01      	ADDLW      1
0x0111	0x00F4      	MOVWF      R3+1
0x0112	0x0873      	MOVF       R3, 0
0x0113	0x00AA      	MOVWF      ad_convert_temp_L0
0x0114	0x0874      	MOVF       R3+1, 0
0x0115	0x00AB      	MOVWF      ad_convert_temp_L0+1
;Slave.c,80 :: 		temp = temp >> 3;
0x0116	0x0873      	MOVF       R3, 0
0x0117	0x00F1      	MOVWF      R1
0x0118	0x0874      	MOVF       R3+1, 0
0x0119	0x00F2      	MOVWF      R1+1
0x011A	0x0CF2      	RRF        R1+1, 1
0x011B	0x0CF1      	RRF        R1, 1
0x011C	0x13F2      	BCF        R1+1, 7
0x011D	0x0CF2      	RRF        R1+1, 1
0x011E	0x0CF1      	RRF        R1, 1
0x011F	0x13F2      	BCF        R1+1, 7
0x0120	0x0CF2      	RRF        R1+1, 1
0x0121	0x0CF1      	RRF        R1, 1
0x0122	0x13F2      	BCF        R1+1, 7
0x0123	0x0871      	MOVF       R1, 0
0x0124	0x00AA      	MOVWF      ad_convert_temp_L0
0x0125	0x0872      	MOVF       R1+1, 0
0x0126	0x00AB      	MOVWF      ad_convert_temp_L0+1
;Slave.c,82 :: 		if (temp > 99)
0x0127	0x0872      	MOVF       R1+1, 0
0x0128	0x3C00      	SUBLW      0
0x0129	0x1D03      	BTFSS      STATUS, 2
0x012A	0x292D      	GOTO       L__ad_convert102
0x012B	0x0871      	MOVF       R1, 0
0x012C	0x3C63      	SUBLW      99
L__ad_convert102:
0x012D	0x1803      	BTFSC      STATUS, 0
0x012E	0x2933      	GOTO       L_ad_convert7
;Slave.c,83 :: 		temp = 99;
0x012F	0x3063      	MOVLW      99
0x0130	0x00AA      	MOVWF      ad_convert_temp_L0
0x0131	0x3000      	MOVLW      0
0x0132	0x00AB      	MOVWF      ad_convert_temp_L0+1
L_ad_convert7:
;Slave.c,84 :: 		return ((unsigned char)temp);
0x0133	0x082A      	MOVF       ad_convert_temp_L0, 0
0x0134	0x00F0      	MOVWF      R0
;Slave.c,85 :: 		}
0x0135	0x0008      	RETURN
; end of _ad_convert
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0136	0x1683      	BSF        STATUS, 5
0x0137	0x1303      	BCF        STATUS, 6
0x0138	0x1107      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x0139	0x1007      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x013A	0x1208      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x013B	0x1288      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x013C	0x1308      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x013D	0x1388      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x013E	0x1283      	BCF        STATUS, 5
0x013F	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x0140	0x1007      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x0141	0x1388      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x0142	0x1308      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x0143	0x1288      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x0144	0x1208      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x0145	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0146	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0147	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0148	0x1688      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x0149	0x1608      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x014A	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x014B	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x014C	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x014D	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x014E	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x014F	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0150	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x0151	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0152	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x0153	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0154	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x0155	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0156	0x1208      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x0157	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x0158	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0159	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x015A	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x015B	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x015C	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x015D	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x015E	0x1288      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x015F	0x1788      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x0160	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x0161	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0162	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x0163	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0164	0x1388      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x0165	0x1608      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x0166	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x0167	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0168	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x0169	0x1208      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x016A	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x016B	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x016C	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x016D	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x016E	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x016F	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0170	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x0171	0x1608      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x0172	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x0173	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0174	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x0175	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0176	0x1208      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x0177	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x0178	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0179	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x017A	0x1788      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x017B	0x1708      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x017C	0x1688      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x017D	0x1608      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x017E	0x1507      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x017F	0x2068      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0180	0x1107      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x0181	0x206E      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0182	0x1683      	BSF        STATUS, 5
0x0183	0x1526      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0184	0x0008      	RETURN
; end of _Lcd_Init
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0185	0x1683      	BSF        STATUS, 5
0x0186	0x1303      	BCF        STATUS, 6
0x0187	0x0824      	MOVF       ___DoICPAddr+1, 0
0x0188	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0189	0x0823      	MOVF       ___DoICPAddr, 0
0x018A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x018B	0x0008      	RETURN
; end of _____DoICP
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x018C	0x299E      	GOTO       L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x018D	0x3080      	MOVLW      128
0x018E	0x1683      	BSF        STATUS, 5
0x018F	0x1303      	BCF        STATUS, 6
0x0190	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x0191	0x29B1      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x0192	0x30C0      	MOVLW      192
0x0193	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x0194	0x29B1      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x0195	0x3094      	MOVLW      148
0x0196	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x0197	0x29B1      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x0198	0x30D4      	MOVLW      212
0x0199	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x019A	0x29B1      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x019B	0x3080      	MOVLW      128
0x019C	0x00AA      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,72 :: 		
0x019D	0x29B1      	GOTO       L_Lcd_Chr5
L_Lcd_Chr4:
0x019E	0x1683      	BSF        STATUS, 5
0x019F	0x1303      	BCF        STATUS, 6
0x01A0	0x082A      	MOVF       FARG_Lcd_Chr_row, 0
0x01A1	0x3A01      	XORLW      1
0x01A2	0x1903      	BTFSC      STATUS, 2
0x01A3	0x298D      	GOTO       L_Lcd_Chr6
0x01A4	0x082A      	MOVF       FARG_Lcd_Chr_row, 0
0x01A5	0x3A02      	XORLW      2
0x01A6	0x1903      	BTFSC      STATUS, 2
0x01A7	0x2992      	GOTO       L_Lcd_Chr7
0x01A8	0x082A      	MOVF       FARG_Lcd_Chr_row, 0
0x01A9	0x3A03      	XORLW      3
0x01AA	0x1903      	BTFSC      STATUS, 2
0x01AB	0x2995      	GOTO       L_Lcd_Chr8
0x01AC	0x082A      	MOVF       FARG_Lcd_Chr_row, 0
0x01AD	0x3A04      	XORLW      4
0x01AE	0x1903      	BTFSC      STATUS, 2
0x01AF	0x2998      	GOTO       L_Lcd_Chr9
0x01B0	0x299B      	GOTO       L_Lcd_Chr10
L_Lcd_Chr5:
;__Lib_Lcd.c,74 :: 		
0x01B1	0x032B      	DECF       FARG_Lcd_Chr_column, 0
0x01B2	0x00F0      	MOVWF      R0
0x01B3	0x082A      	MOVF       FARG_Lcd_Chr_row, 0
0x01B4	0x07F0      	ADDWF      R0, 1
0x01B5	0x0870      	MOVF       R0, 0
0x01B6	0x00AA      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x01B7	0x1526      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,77 :: 		
0x01B8	0x0870      	MOVF       R0, 0
0x01B9	0x00AF      	MOVWF      FARG_Lcd_Cmd_out_char
0x01BA	0x2082      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x01BB	0x1683      	BSF        STATUS, 5
0x01BC	0x1126      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,80 :: 		
0x01BD	0x082C      	MOVF       FARG_Lcd_Chr_out_char, 0
0x01BE	0x00AF      	MOVWF      FARG_Lcd_Cmd_out_char
0x01BF	0x2082      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x01C0	0x1683      	BSF        STATUS, 5
0x01C1	0x1526      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,82 :: 		
L_end_Lcd_Chr:
0x01C2	0x0008      	RETURN
; end of _Lcd_Chr
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x01C3	0x29D5      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x01C4	0x3080      	MOVLW      128
0x01C5	0x1683      	BSF        STATUS, 5
0x01C6	0x1303      	BCF        STATUS, 6
0x01C7	0x00AA      	MOVWF      FARG_Lcd_Out_row
0x01C8	0x29E8      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x01C9	0x30C0      	MOVLW      192
0x01CA	0x00AA      	MOVWF      FARG_Lcd_Out_row
0x01CB	0x29E8      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x01CC	0x3094      	MOVLW      148
0x01CD	0x00AA      	MOVWF      FARG_Lcd_Out_row
0x01CE	0x29E8      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x01CF	0x30D4      	MOVLW      212
0x01D0	0x00AA      	MOVWF      FARG_Lcd_Out_row
0x01D1	0x29E8      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x01D2	0x3080      	MOVLW      128
0x01D3	0x00AA      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x01D4	0x29E8      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x01D5	0x1683      	BSF        STATUS, 5
0x01D6	0x1303      	BCF        STATUS, 6
0x01D7	0x082A      	MOVF       FARG_Lcd_Out_row, 0
0x01D8	0x3A01      	XORLW      1
0x01D9	0x1903      	BTFSC      STATUS, 2
0x01DA	0x29C4      	GOTO       L_Lcd_Out13
0x01DB	0x082A      	MOVF       FARG_Lcd_Out_row, 0
0x01DC	0x3A02      	XORLW      2
0x01DD	0x1903      	BTFSC      STATUS, 2
0x01DE	0x29C9      	GOTO       L_Lcd_Out14
0x01DF	0x082A      	MOVF       FARG_Lcd_Out_row, 0
0x01E0	0x3A03      	XORLW      3
0x01E1	0x1903      	BTFSC      STATUS, 2
0x01E2	0x29CC      	GOTO       L_Lcd_Out15
0x01E3	0x082A      	MOVF       FARG_Lcd_Out_row, 0
0x01E4	0x3A04      	XORLW      4
0x01E5	0x1903      	BTFSC      STATUS, 2
0x01E6	0x29CF      	GOTO       L_Lcd_Out16
0x01E7	0x29D2      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x01E8	0x032B      	DECF       FARG_Lcd_Out_column, 0
0x01E9	0x00F0      	MOVWF      R0
0x01EA	0x082A      	MOVF       FARG_Lcd_Out_row, 0
0x01EB	0x07F0      	ADDWF      R0, 1
0x01EC	0x0870      	MOVF       R0, 0
0x01ED	0x00AA      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x01EE	0x0870      	MOVF       R0, 0
0x01EF	0x00AF      	MOVWF      FARG_Lcd_Cmd_out_char
0x01F0	0x2082      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x01F1	0x1683      	BSF        STATUS, 5
0x01F2	0x1126      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x01F3	0x01AD      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x01F4	0x082D      	MOVF       Lcd_Out_i_L0, 0
0x01F5	0x072C      	ADDWF      FARG_Lcd_Out_text, 0
0x01F6	0x0084      	MOVWF      FSR
0x01F7	0x0800      	MOVF       INDF, 0
0x01F8	0x1903      	BTFSC      STATUS, 2
0x01F9	0x2A02      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x01FA	0x082D      	MOVF       Lcd_Out_i_L0, 0
0x01FB	0x072C      	ADDWF      FARG_Lcd_Out_text, 0
0x01FC	0x0084      	MOVWF      FSR
0x01FD	0x0800      	MOVF       INDF, 0
0x01FE	0x00AE      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x01FF	0x20E0      	CALL       _Lcd_Chr_CP
0x0200	0x0AAD      	INCF       Lcd_Out_i_L0, 1
0x0201	0x29F4      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0202	0x1526      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0203	0x0008      	RETURN
; end of _Lcd_Out
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x0204	0x1683      	BSF        STATUS, 5
0x0205	0x1303      	BCF        STATUS, 6
0x0206	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0207	0x3090      	MOVLW      144
0x0208	0x1283      	BCF        STATUS, 5
0x0209	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x020A	0x1683      	BSF        STATUS, 5
0x020B	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x020C	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x020D	0x1283      	BCF        STATUS, 5
0x020E	0x1E8C      	BTFSS      PIR1, 5
0x020F	0x2A13      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0210	0x081A      	MOVF       RCREG, 0
0x0211	0x00F0      	MOVWF      R0
0x0212	0x2A0D      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x0213	0x0008      	RETURN
; end of _UART1_Init
_convert:
;Slave.c,87 :: 		void convert(unsigned char number)
;Slave.c,89 :: 		X1 = number;
0x0214	0x1683      	BSF        STATUS, 5
0x0215	0x1303      	BCF        STATUS, 6
0x0216	0x082A      	MOVF       FARG_convert_number, 0
0x0217	0x1283      	BCF        STATUS, 5
0x0218	0x00A2      	MOVWF      _X1
;Slave.c,90 :: 		X10 = 0;
0x0219	0x01A3      	CLRF       _X10
;Slave.c,91 :: 		while (X1 > 9)
L_convert8:
0x021A	0x0822      	MOVF       _X1, 0
0x021B	0x3C09      	SUBLW      9
0x021C	0x1803      	BTFSC      STATUS, 0
0x021D	0x2A22      	GOTO       L_convert9
;Slave.c,93 :: 		X1 = X1 - 10;
0x021E	0x300A      	MOVLW      10
0x021F	0x02A2      	SUBWF      _X1, 1
;Slave.c,94 :: 		X10++;
0x0220	0x0AA3      	INCF       _X10, 1
;Slave.c,95 :: 		}
0x0221	0x2A1A      	GOTO       L_convert8
L_convert9:
;Slave.c,96 :: 		}
0x0222	0x0008      	RETURN
; end of _convert
_transmitByte:
;Slave.c,62 :: 		void transmitByte(unsigned char bajt)
;Slave.c,64 :: 		TXREG = bajt;
0x0223	0x1683      	BSF        STATUS, 5
0x0224	0x1303      	BCF        STATUS, 6
0x0225	0x0829      	MOVF       FARG_transmitByte_bajt, 0
0x0226	0x1283      	BCF        STATUS, 5
0x0227	0x0099      	MOVWF      TXREG
;Slave.c,65 :: 		while (!TXSTA.TRMT)
L_transmitByte0:
0x0228	0x1683      	BSF        STATUS, 5
0x0229	0x1898      	BTFSC      TXSTA, 1
0x022A	0x2A2C      	GOTO       L_transmitByte1
;Slave.c,66 :: 		;
0x022B	0x2A28      	GOTO       L_transmitByte0
L_transmitByte1:
;Slave.c,67 :: 		}
0x022C	0x0008      	RETURN
; end of _transmitByte
_init_variables:
;Slave.c,280 :: 		void init_variables()
;Slave.c,282 :: 		byteX = 0;
0x022D	0x1283      	BCF        STATUS, 5
0x022E	0x1303      	BCF        STATUS, 6
0x022F	0x01A5      	CLRF       _byteX
;Slave.c,283 :: 		Temperature = 0;
0x0230	0x01A4      	CLRF       _Temperature
;Slave.c,284 :: 		m_bSmoke = 0;
0x0231	0x1683      	BSF        STATUS, 5
0x0232	0x1325      	BCF        _m_bSmoke, BitPos(_m_bSmoke+0)
;Slave.c,285 :: 		m_bDrill = 0;
0x0233	0x12A5      	BCF        _m_bDrill, BitPos(_m_bDrill+0)
;Slave.c,286 :: 		m_bO2 = 0;
0x0234	0x10A6      	BCF        _m_bO2, BitPos(_m_bO2+0)
;Slave.c,287 :: 		m_bPir = 0;
0x0235	0x1026      	BCF        _m_bPir, BitPos(_m_bPir+0)
;Slave.c,288 :: 		m_bVent = 0;
0x0236	0x13A5      	BCF        _m_bVent, BitPos(_m_bVent+0)
;Slave.c,289 :: 		m_bDoorOpen = 0;
0x0237	0x1225      	BCF        _m_bDoorOpen, BitPos(_m_bDoorOpen+0)
;Slave.c,290 :: 		m_bSound = 0;
0x0238	0x11A5      	BCF        _m_bSound, BitPos(_m_bSound+0)
;Slave.c,291 :: 		m_bGas = 0;
0x0239	0x1125      	BCF        _m_bGas, BitPos(_m_bGas+0)
;Slave.c,293 :: 		State = 0;
0x023A	0x1283      	BCF        STATUS, 5
0x023B	0x01A6      	CLRF       _State
;Slave.c,294 :: 		Tajmer = 0;
0x023C	0x01A7      	CLRF       _Tajmer
;Slave.c,295 :: 		displej = 0;
0x023D	0x01A8      	CLRF       _displej
;Slave.c,296 :: 		X1 = 0;
0x023E	0x01A2      	CLRF       _X1
;Slave.c,297 :: 		X10 = 0;
0x023F	0x01A3      	CLRF       _X10
;Slave.c,298 :: 		Flag1 = 0;
0x0240	0x1683      	BSF        STATUS, 5
0x0241	0x10A5      	BCF        _Flag1, BitPos(_Flag1+0)
;Slave.c,299 :: 		CallFlag = 0;
0x0242	0x1025      	BCF        _CallFlag, BitPos(_CallFlag+0)
;Slave.c,300 :: 		}
0x0243	0x0008      	RETURN
; end of _init_variables
_processInputs:
;Slave.c,127 :: 		void processInputs()
;Slave.c,129 :: 		Temperature = ad_convert();
0x0244	0x20E9      	CALL       _ad_convert
0x0245	0x0870      	MOVF       R0, 0
0x0246	0x1283      	BCF        STATUS, 5
0x0247	0x00A4      	MOVWF      _Temperature
;Slave.c,131 :: 		m_bSmoke = SMOKE;
0x0248	0x1888      	BTFSC      PORTD, 1
0x0249	0x2A4D      	GOTO       L__processInputs103
0x024A	0x1683      	BSF        STATUS, 5
0x024B	0x1325      	BCF        _m_bSmoke, BitPos(_m_bSmoke+0)
0x024C	0x2A4F      	GOTO       L__processInputs104
L__processInputs103:
0x024D	0x1683      	BSF        STATUS, 5
0x024E	0x1725      	BSF        _m_bSmoke, BitPos(_m_bSmoke+0)
L__processInputs104:
;Slave.c,132 :: 		m_bDrill = DRILL;
0x024F	0x1283      	BCF        STATUS, 5
0x0250	0x1988      	BTFSC      PORTD, 3
0x0251	0x2A55      	GOTO       L__processInputs105
0x0252	0x1683      	BSF        STATUS, 5
0x0253	0x12A5      	BCF        _m_bDrill, BitPos(_m_bDrill+0)
0x0254	0x2A57      	GOTO       L__processInputs106
L__processInputs105:
0x0255	0x1683      	BSF        STATUS, 5
0x0256	0x16A5      	BSF        _m_bDrill, BitPos(_m_bDrill+0)
L__processInputs106:
;Slave.c,133 :: 		m_bO2 = O2;
0x0257	0x1283      	BCF        STATUS, 5
0x0258	0x1908      	BTFSC      PORTD, 2
0x0259	0x2A5D      	GOTO       L__processInputs107
0x025A	0x1683      	BSF        STATUS, 5
0x025B	0x10A6      	BCF        _m_bO2, BitPos(_m_bO2+0)
0x025C	0x2A5F      	GOTO       L__processInputs108
L__processInputs107:
0x025D	0x1683      	BSF        STATUS, 5
0x025E	0x14A6      	BSF        _m_bO2, BitPos(_m_bO2+0)
L__processInputs108:
;Slave.c,134 :: 		m_bPir = PIR;
0x025F	0x1283      	BCF        STATUS, 5
0x0260	0x1808      	BTFSC      PORTD, 0
0x0261	0x2A65      	GOTO       L__processInputs109
0x0262	0x1683      	BSF        STATUS, 5
0x0263	0x1026      	BCF        _m_bPir, BitPos(_m_bPir+0)
0x0264	0x2A67      	GOTO       L__processInputs110
L__processInputs109:
0x0265	0x1683      	BSF        STATUS, 5
0x0266	0x1426      	BSF        _m_bPir, BitPos(_m_bPir+0)
L__processInputs110:
;Slave.c,136 :: 		m_bVent = 0;
0x0267	0x13A5      	BCF        _m_bVent, BitPos(_m_bVent+0)
;Slave.c,137 :: 		m_bDoorOpen = 0;
0x0268	0x1225      	BCF        _m_bDoorOpen, BitPos(_m_bDoorOpen+0)
;Slave.c,138 :: 		m_bSound = 0;
0x0269	0x11A5      	BCF        _m_bSound, BitPos(_m_bSound+0)
;Slave.c,139 :: 		m_bGas = 0;
0x026A	0x1125      	BCF        _m_bGas, BitPos(_m_bGas+0)
;Slave.c,141 :: 		if (Tajmer > 0)
0x026B	0x1283      	BCF        STATUS, 5
0x026C	0x0827      	MOVF       _Tajmer, 0
0x026D	0x3C00      	SUBLW      0
0x026E	0x1803      	BTFSC      STATUS, 0
0x026F	0x2A71      	GOTO       L_processInputs12
;Slave.c,142 :: 		Tajmer--;
0x0270	0x03A7      	DECF       _Tajmer, 1
L_processInputs12:
;Slave.c,143 :: 		switch (State)
0x0271	0x2B1F      	GOTO       L_processInputs13
;Slave.c,145 :: 		case 0:
L_processInputs15:
;Slave.c,146 :: 		m_bVent = 1;
0x0272	0x1683      	BSF        STATUS, 5
0x0273	0x17A5      	BSF        _m_bVent, BitPos(_m_bVent+0)
;Slave.c,147 :: 		m_bDoorOpen = 1;
0x0274	0x1625      	BSF        _m_bDoorOpen, BitPos(_m_bDoorOpen+0)
;Slave.c,148 :: 		if ((m_bSmoke == 1) || (Temperature > 50))
0x0275	0x1B25      	BTFSC      _m_bSmoke, BitPos(_m_bSmoke+0)
0x0276	0x2A7D      	GOTO       L__processInputs96
0x0277	0x1283      	BCF        STATUS, 5
0x0278	0x0824      	MOVF       _Temperature, 0
0x0279	0x3C32      	SUBLW      50
0x027A	0x1C03      	BTFSS      STATUS, 0
0x027B	0x2A7D      	GOTO       L__processInputs96
0x027C	0x2A83      	GOTO       L_processInputs18
L__processInputs96:
0x027D	0x1283      	BCF        STATUS, 5
;Slave.c,150 :: 		State = 1;
0x027E	0x3001      	MOVLW      1
0x027F	0x00A6      	MOVWF      _State
;Slave.c,151 :: 		Tajmer = 10;
0x0280	0x300A      	MOVLW      10
0x0281	0x00A7      	MOVWF      _Tajmer
;Slave.c,152 :: 		}
0x0282	0x2A84      	GOTO       L_processInputs19
L_processInputs18:
;Slave.c,154 :: 		State = 0;
0x0283	0x01A6      	CLRF       _State
L_processInputs19:
;Slave.c,155 :: 		break;
0x0284	0x2B3B      	GOTO       L_processInputs14
;Slave.c,156 :: 		case 1:
L_processInputs20:
;Slave.c,157 :: 		m_bSound = 1;
0x0285	0x1683      	BSF        STATUS, 5
0x0286	0x15A5      	BSF        _m_bSound, BitPos(_m_bSound+0)
;Slave.c,158 :: 		m_bDoorOpen = 1;
0x0287	0x1625      	BSF        _m_bDoorOpen, BitPos(_m_bDoorOpen+0)
;Slave.c,159 :: 		m_bVent = 1;
0x0288	0x17A5      	BSF        _m_bVent, BitPos(_m_bVent+0)
;Slave.c,161 :: 		if ((Tajmer > 0) || ((Tajmer == 0) && (m_bPir == 1)))
0x0289	0x1283      	BCF        STATUS, 5
0x028A	0x0827      	MOVF       _Tajmer, 0
0x028B	0x3C00      	SUBLW      0
0x028C	0x1C03      	BTFSS      STATUS, 0
0x028D	0x2A97      	GOTO       L__processInputs94
0x028E	0x0827      	MOVF       _Tajmer, 0
0x028F	0x3A00      	XORLW      0
0x0290	0x1D03      	BTFSS      STATUS, 2
0x0291	0x2A96      	GOTO       L__processInputs95
0x0292	0x1683      	BSF        STATUS, 5
0x0293	0x1C26      	BTFSS      _m_bPir, BitPos(_m_bPir+0)
0x0294	0x2A96      	GOTO       L__processInputs95
0x0295	0x2A97      	GOTO       L__processInputs94
L__processInputs95:
0x0296	0x2A9B      	GOTO       L_processInputs25
L__processInputs94:
;Slave.c,163 :: 		State = 1;
0x0297	0x3001      	MOVLW      1
0x0298	0x1283      	BCF        STATUS, 5
0x0299	0x00A6      	MOVWF      _State
;Slave.c,165 :: 		}
0x029A	0x2AA0      	GOTO       L_processInputs26
L_processInputs25:
0x029B	0x1283      	BCF        STATUS, 5
;Slave.c,168 :: 		State = 2;
0x029C	0x3002      	MOVLW      2
0x029D	0x00A6      	MOVWF      _State
;Slave.c,169 :: 		Tajmer = 10;
0x029E	0x300A      	MOVLW      10
0x029F	0x00A7      	MOVWF      _Tajmer
;Slave.c,170 :: 		}
L_processInputs26:
;Slave.c,171 :: 		break;
0x02A0	0x2B3B      	GOTO       L_processInputs14
;Slave.c,172 :: 		case 2:
L_processInputs27:
;Slave.c,173 :: 		m_bSound = 1;
0x02A1	0x1683      	BSF        STATUS, 5
0x02A2	0x15A5      	BSF        _m_bSound, BitPos(_m_bSound+0)
;Slave.c,174 :: 		if ((Tajmer == 0) && (m_bPir == 0))
0x02A3	0x1283      	BCF        STATUS, 5
0x02A4	0x0827      	MOVF       _Tajmer, 0
0x02A5	0x3A00      	XORLW      0
0x02A6	0x1D03      	BTFSS      STATUS, 2
0x02A7	0x2AAF      	GOTO       L_processInputs30
0x02A8	0x1683      	BSF        STATUS, 5
0x02A9	0x1826      	BTFSC      _m_bPir, BitPos(_m_bPir+0)
0x02AA	0x2AAF      	GOTO       L_processInputs30
L__processInputs93:
;Slave.c,175 :: 		State = 3;
0x02AB	0x3003      	MOVLW      3
0x02AC	0x1283      	BCF        STATUS, 5
0x02AD	0x00A6      	MOVWF      _State
0x02AE	0x2AC0      	GOTO       L_processInputs31
L_processInputs30:
0x02AF	0x1283      	BCF        STATUS, 5
;Slave.c,176 :: 		else if ((Tajmer > 0) || ((Tajmer == 0) && (m_bPir == 1)))
0x02B0	0x0827      	MOVF       _Tajmer, 0
0x02B1	0x3C00      	SUBLW      0
0x02B2	0x1C03      	BTFSS      STATUS, 0
0x02B3	0x2ABD      	GOTO       L__processInputs91
0x02B4	0x0827      	MOVF       _Tajmer, 0
0x02B5	0x3A00      	XORLW      0
0x02B6	0x1D03      	BTFSS      STATUS, 2
0x02B7	0x2ABC      	GOTO       L__processInputs92
0x02B8	0x1683      	BSF        STATUS, 5
0x02B9	0x1C26      	BTFSS      _m_bPir, BitPos(_m_bPir+0)
0x02BA	0x2ABC      	GOTO       L__processInputs92
0x02BB	0x2ABD      	GOTO       L__processInputs91
L__processInputs92:
0x02BC	0x2AC0      	GOTO       L_processInputs36
L__processInputs91:
;Slave.c,177 :: 		State = 2;
0x02BD	0x3002      	MOVLW      2
0x02BE	0x1283      	BCF        STATUS, 5
0x02BF	0x00A6      	MOVWF      _State
L_processInputs36:
L_processInputs31:
;Slave.c,178 :: 		break;
0x02C0	0x2B3B      	GOTO       L_processInputs14
;Slave.c,179 :: 		case 3:
L_processInputs37:
;Slave.c,180 :: 		m_bSound = 1;
0x02C1	0x1683      	BSF        STATUS, 5
0x02C2	0x15A5      	BSF        _m_bSound, BitPos(_m_bSound+0)
;Slave.c,181 :: 		m_bGas = 1;
0x02C3	0x1525      	BSF        _m_bGas, BitPos(_m_bGas+0)
;Slave.c,182 :: 		if (m_bO2 == 1)
0x02C4	0x1CA6      	BTFSS      _m_bO2, BitPos(_m_bO2+0)
0x02C5	0x2ACA      	GOTO       L_processInputs38
;Slave.c,183 :: 		State = 3;
0x02C6	0x3003      	MOVLW      3
0x02C7	0x1283      	BCF        STATUS, 5
0x02C8	0x00A6      	MOVWF      _State
0x02C9	0x2ACF      	GOTO       L_processInputs39
L_processInputs38:
0x02CA	0x1283      	BCF        STATUS, 5
;Slave.c,186 :: 		State = 4;
0x02CB	0x3004      	MOVLW      4
0x02CC	0x00A6      	MOVWF      _State
;Slave.c,187 :: 		Tajmer = 10;
0x02CD	0x300A      	MOVLW      10
0x02CE	0x00A7      	MOVWF      _Tajmer
;Slave.c,188 :: 		}
L_processInputs39:
;Slave.c,189 :: 		break;
0x02CF	0x2B3B      	GOTO       L_processInputs14
;Slave.c,190 :: 		case 4:
L_processInputs40:
;Slave.c,191 :: 		m_bSound = 1;
0x02D0	0x1683      	BSF        STATUS, 5
0x02D1	0x15A5      	BSF        _m_bSound, BitPos(_m_bSound+0)
;Slave.c,192 :: 		if ((m_bO2 == 0) && (Tajmer == 0))
0x02D2	0x18A6      	BTFSC      _m_bO2, BitPos(_m_bO2+0)
0x02D3	0x2ADE      	GOTO       L_processInputs43
0x02D4	0x1283      	BCF        STATUS, 5
0x02D5	0x0827      	MOVF       _Tajmer, 0
0x02D6	0x3A00      	XORLW      0
0x02D7	0x1D03      	BTFSS      STATUS, 2
0x02D8	0x2ADE      	GOTO       L_processInputs43
L__processInputs90:
;Slave.c,194 :: 		State = 5;
0x02D9	0x3005      	MOVLW      5
0x02DA	0x00A6      	MOVWF      _State
;Slave.c,195 :: 		Tajmer = 10;
0x02DB	0x300A      	MOVLW      10
0x02DC	0x00A7      	MOVWF      _Tajmer
;Slave.c,196 :: 		}
0x02DD	0x2AE8      	GOTO       L_processInputs44
L_processInputs43:
0x02DE	0x1283      	BCF        STATUS, 5
;Slave.c,197 :: 		else if (Tajmer == 0)
0x02DF	0x0827      	MOVF       _Tajmer, 0
0x02E0	0x3A00      	XORLW      0
0x02E1	0x1D03      	BTFSS      STATUS, 2
0x02E2	0x2AE6      	GOTO       L_processInputs45
;Slave.c,198 :: 		State = 3;
0x02E3	0x3003      	MOVLW      3
0x02E4	0x00A6      	MOVWF      _State
0x02E5	0x2AE8      	GOTO       L_processInputs46
L_processInputs45:
;Slave.c,200 :: 		State = 4;
0x02E6	0x3004      	MOVLW      4
0x02E7	0x00A6      	MOVWF      _State
L_processInputs46:
L_processInputs44:
;Slave.c,201 :: 		break;
0x02E8	0x2B3B      	GOTO       L_processInputs14
;Slave.c,202 :: 		case 5:
L_processInputs47:
;Slave.c,203 :: 		m_bSound = 1;
0x02E9	0x1683      	BSF        STATUS, 5
0x02EA	0x15A5      	BSF        _m_bSound, BitPos(_m_bSound+0)
;Slave.c,204 :: 		m_bVent = 1;
0x02EB	0x17A5      	BSF        _m_bVent, BitPos(_m_bVent+0)
;Slave.c,205 :: 		if (m_bO2 == 0)
0x02EC	0x18A6      	BTFSC      _m_bO2, BitPos(_m_bO2+0)
0x02ED	0x2AF2      	GOTO       L_processInputs48
;Slave.c,206 :: 		State = 5;
0x02EE	0x3005      	MOVLW      5
0x02EF	0x1283      	BCF        STATUS, 5
0x02F0	0x00A6      	MOVWF      _State
0x02F1	0x2AFE      	GOTO       L_processInputs49
L_processInputs48:
0x02F2	0x1283      	BCF        STATUS, 5
;Slave.c,208 :: 		else if (Tajmer == 0)
0x02F3	0x0827      	MOVF       _Tajmer, 0
0x02F4	0x3A00      	XORLW      0
0x02F5	0x1D03      	BTFSS      STATUS, 2
0x02F6	0x2AFC      	GOTO       L_processInputs50
;Slave.c,210 :: 		State = 6;
0x02F7	0x3006      	MOVLW      6
0x02F8	0x00A6      	MOVWF      _State
;Slave.c,211 :: 		Tajmer = 10;
0x02F9	0x300A      	MOVLW      10
0x02FA	0x00A7      	MOVWF      _Tajmer
;Slave.c,212 :: 		}
0x02FB	0x2AFE      	GOTO       L_processInputs51
L_processInputs50:
;Slave.c,214 :: 		State = 5;
0x02FC	0x3005      	MOVLW      5
0x02FD	0x00A6      	MOVWF      _State
L_processInputs51:
L_processInputs49:
;Slave.c,215 :: 		break;
0x02FE	0x2B3B      	GOTO       L_processInputs14
;Slave.c,216 :: 		case 6:
L_processInputs52:
;Slave.c,218 :: 		m_bVent = 1;
0x02FF	0x1683      	BSF        STATUS, 5
0x0300	0x17A5      	BSF        _m_bVent, BitPos(_m_bVent+0)
;Slave.c,219 :: 		m_bSound = 1;
0x0301	0x15A5      	BSF        _m_bSound, BitPos(_m_bSound+0)
;Slave.c,220 :: 		if (Tajmer == 0)
0x0302	0x1283      	BCF        STATUS, 5
0x0303	0x0827      	MOVF       _Tajmer, 0
0x0304	0x3A00      	XORLW      0
0x0305	0x1D03      	BTFSS      STATUS, 2
0x0306	0x2B1E      	GOTO       L_processInputs53
;Slave.c,221 :: 		if ((m_bSmoke == 1) || (Temperature > 50))
0x0307	0x1683      	BSF        STATUS, 5
0x0308	0x1B25      	BTFSC      _m_bSmoke, BitPos(_m_bSmoke+0)
0x0309	0x2B10      	GOTO       L__processInputs89
0x030A	0x1283      	BCF        STATUS, 5
0x030B	0x0824      	MOVF       _Temperature, 0
0x030C	0x3C32      	SUBLW      50
0x030D	0x1C03      	BTFSS      STATUS, 0
0x030E	0x2B10      	GOTO       L__processInputs89
0x030F	0x2B16      	GOTO       L_processInputs56
L__processInputs89:
0x0310	0x1283      	BCF        STATUS, 5
;Slave.c,223 :: 		State = 1;
0x0311	0x3001      	MOVLW      1
0x0312	0x00A6      	MOVWF      _State
;Slave.c,224 :: 		Tajmer = 10;
0x0313	0x300A      	MOVLW      10
0x0314	0x00A7      	MOVWF      _Tajmer
;Slave.c,225 :: 		}
0x0315	0x2B1E      	GOTO       L_processInputs57
L_processInputs56:
;Slave.c,226 :: 		else if (Tajmer > 0)
0x0316	0x0827      	MOVF       _Tajmer, 0
0x0317	0x3C00      	SUBLW      0
0x0318	0x1803      	BTFSC      STATUS, 0
0x0319	0x2B1D      	GOTO       L_processInputs58
;Slave.c,227 :: 		State = 6;
0x031A	0x3006      	MOVLW      6
0x031B	0x00A6      	MOVWF      _State
0x031C	0x2B1E      	GOTO       L_processInputs59
L_processInputs58:
;Slave.c,229 :: 		State = 0;
0x031D	0x01A6      	CLRF       _State
L_processInputs59:
L_processInputs57:
L_processInputs53:
;Slave.c,230 :: 		break;
0x031E	0x2B3B      	GOTO       L_processInputs14
;Slave.c,231 :: 		}
L_processInputs13:
0x031F	0x0826      	MOVF       _State, 0
0x0320	0x3A00      	XORLW      0
0x0321	0x1903      	BTFSC      STATUS, 2
0x0322	0x2A72      	GOTO       L_processInputs15
0x0323	0x0826      	MOVF       _State, 0
0x0324	0x3A01      	XORLW      1
0x0325	0x1903      	BTFSC      STATUS, 2
0x0326	0x2A85      	GOTO       L_processInputs20
0x0327	0x0826      	MOVF       _State, 0
0x0328	0x3A02      	XORLW      2
0x0329	0x1903      	BTFSC      STATUS, 2
0x032A	0x2AA1      	GOTO       L_processInputs27
0x032B	0x0826      	MOVF       _State, 0
0x032C	0x3A03      	XORLW      3
0x032D	0x1903      	BTFSC      STATUS, 2
0x032E	0x2AC1      	GOTO       L_processInputs37
0x032F	0x0826      	MOVF       _State, 0
0x0330	0x3A04      	XORLW      4
0x0331	0x1903      	BTFSC      STATUS, 2
0x0332	0x2AD0      	GOTO       L_processInputs40
0x0333	0x0826      	MOVF       _State, 0
0x0334	0x3A05      	XORLW      5
0x0335	0x1903      	BTFSC      STATUS, 2
0x0336	0x2AE9      	GOTO       L_processInputs47
0x0337	0x0826      	MOVF       _State, 0
0x0338	0x3A06      	XORLW      6
0x0339	0x1903      	BTFSC      STATUS, 2
0x033A	0x2AFF      	GOTO       L_processInputs52
L_processInputs14:
;Slave.c,233 :: 		GAS = m_bGAS;
0x033B	0x1683      	BSF        STATUS, 5
0x033C	0x1925      	BTFSC      _m_bGas, BitPos(_m_bGas+0)
0x033D	0x2B41      	GOTO       L__processInputs111
0x033E	0x1283      	BCF        STATUS, 5
0x033F	0x1105      	BCF        PORTA, 2
0x0340	0x2B43      	GOTO       L__processInputs112
L__processInputs111:
0x0341	0x1283      	BCF        STATUS, 5
0x0342	0x1505      	BSF        PORTA, 2
L__processInputs112:
;Slave.c,234 :: 		SOUND = m_bSound;
0x0343	0x1683      	BSF        STATUS, 5
0x0344	0x19A5      	BTFSC      _m_bSound, BitPos(_m_bSound+0)
0x0345	0x2B49      	GOTO       L__processInputs113
0x0346	0x1283      	BCF        STATUS, 5
0x0347	0x1185      	BCF        PORTA, 3
0x0348	0x2B4B      	GOTO       L__processInputs114
L__processInputs113:
0x0349	0x1283      	BCF        STATUS, 5
0x034A	0x1585      	BSF        PORTA, 3
L__processInputs114:
;Slave.c,235 :: 		DOOR_OPEN = m_bDoorOpen;
0x034B	0x1683      	BSF        STATUS, 5
0x034C	0x1A25      	BTFSC      _m_bDoorOpen, BitPos(_m_bDoorOpen+0)
0x034D	0x2B51      	GOTO       L__processInputs115
0x034E	0x1283      	BCF        STATUS, 5
0x034F	0x1205      	BCF        PORTA, 4
0x0350	0x2B53      	GOTO       L__processInputs116
L__processInputs115:
0x0351	0x1283      	BCF        STATUS, 5
0x0352	0x1605      	BSF        PORTA, 4
L__processInputs116:
;Slave.c,236 :: 		}
0x0353	0x0008      	RETURN
; end of _processInputs
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0354	0x2185      	CALL       _____DoICP
0x0355	0x118A      	BCF        PCLATH, 3
0x0356	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0357	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0358	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0359	0x0AA3      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x035A	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x035B	0x0AA4      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x035C	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x035D	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x035E	0x2B54      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x035F	0x0008      	RETURN
; end of ___CC2DW
_init:
;Slave.c,238 :: 		void init()
;Slave.c,241 :: 		TRISA = 0x03; // ulazi za potenciometre, PORTA.F0 i PORTA.F1
0x0360	0x3003      	MOVLW      3
0x0361	0x1683      	BSF        STATUS, 5
0x0362	0x1303      	BCF        STATUS, 6
0x0363	0x0085      	MOVWF      TRISA
;Slave.c,242 :: 		TRISB = 0x3F; // pinovi na portu B od 0 do 5 su digitalni
0x0364	0x303F      	MOVLW      63
0x0365	0x0086      	MOVWF      TRISB
;Slave.c,243 :: 		TRISC = 0xC0; // pinovi 6 i 7 su vezani za RS485
0x0366	0x30C0      	MOVLW      192
0x0367	0x0087      	MOVWF      TRISC
;Slave.c,246 :: 		TRISD = 0x0F;
0x0368	0x300F      	MOVLW      15
0x0369	0x0088      	MOVWF      TRISD
;Slave.c,249 :: 		PORTA = 0x00;
0x036A	0x1283      	BCF        STATUS, 5
0x036B	0x0185      	CLRF       PORTA
;Slave.c,250 :: 		PORTB = 0x00;
0x036C	0x0186      	CLRF       PORTB
;Slave.c,251 :: 		PORTC = 0x00;
0x036D	0x0187      	CLRF       PORTC
;Slave.c,252 :: 		PORTD = 0x00;
0x036E	0x0188      	CLRF       PORTD
;Slave.c,254 :: 		ADCON0 = 0x81;                 // ukljucujem A/D konverziju, kanal 0
0x036F	0x3081      	MOVLW      129
0x0370	0x009F      	MOVWF      ADCON0
;Slave.c,255 :: 		ADCON1 = 0b10001110; // imam samo analogni ulaz pod A0
0x0371	0x308E      	MOVLW      142
0x0372	0x1683      	BSF        STATUS, 5
0x0373	0x009F      	MOVWF      ADCON1
;Slave.c,256 :: 		INTCON = 0b11000000; // default podesavanja
0x0374	0x30C0      	MOVLW      192
0x0375	0x008B      	MOVWF      INTCON
;Slave.c,257 :: 		PIE1 = 0b00000000;
0x0376	0x018C      	CLRF       PIE1
;Slave.c,258 :: 		T1CON = 0b00110000; // konfiguracija preskalera
0x0377	0x3030      	MOVLW      48
0x0378	0x1283      	BCF        STATUS, 5
0x0379	0x0090      	MOVWF      T1CON
;Slave.c,259 :: 		TMR1H = 0x0B;                // startne vrednosti za tajmer 1
0x037A	0x300B      	MOVLW      11
0x037B	0x008F      	MOVWF      TMR1H
;Slave.c,260 :: 		TMR1L = 0xDC;
0x037C	0x30DC      	MOVLW      220
0x037D	0x008E      	MOVWF      TMR1L
;Slave.c,261 :: 		T1CON.TMR1ON = 1;
0x037E	0x1410      	BSF        T1CON, 0
;Slave.c,263 :: 		PIR1.TMR1IF = 0;
0x037F	0x100C      	BCF        PIR1, 0
;Slave.c,264 :: 		PIE1.TMR1IE = 1;
0x0380	0x1683      	BSF        STATUS, 5
0x0381	0x140C      	BSF        PIE1, 0
;Slave.c,266 :: 		Uart1_Init(19200); // biblioteka
0x0382	0x3040      	MOVLW      64
0x0383	0x0099      	MOVWF      SPBRG
0x0384	0x1518      	BSF        TXSTA, 2
0x0385	0x2204      	CALL       _UART1_Init
;Slave.c,268 :: 		TXSTA.TXEN = 1;
0x0386	0x1683      	BSF        STATUS, 5
0x0387	0x1698      	BSF        TXSTA, 5
;Slave.c,269 :: 		RCSTA.SPEN = 1;
0x0388	0x1283      	BCF        STATUS, 5
0x0389	0x1798      	BSF        RCSTA, 7
;Slave.c,270 :: 		RCSTA.CREN = 1;
0x038A	0x1618      	BSF        RCSTA, 4
;Slave.c,272 :: 		PIE1.RCIE = 1;        // dozvola za serijski prijem
0x038B	0x1683      	BSF        STATUS, 5
0x038C	0x168C      	BSF        PIE1, 5
;Slave.c,273 :: 		INTCON.GIE = 1; // globalna dozvola prekida
0x038D	0x178B      	BSF        INTCON, 7
;Slave.c,275 :: 		Lcd_Init();
0x038E	0x2136      	CALL       _Lcd_Init
;Slave.c,276 :: 		Lcd_Cmd(_LCD_CLEAR);
0x038F	0x3001      	MOVLW      1
0x0390	0x00AF      	MOVWF      FARG_Lcd_Cmd_out_char
0x0391	0x2082      	CALL       _Lcd_Cmd
;Slave.c,277 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x0392	0x300C      	MOVLW      12
0x0393	0x1683      	BSF        STATUS, 5
0x0394	0x00AF      	MOVWF      FARG_Lcd_Cmd_out_char
0x0395	0x2082      	CALL       _Lcd_Cmd
;Slave.c,278 :: 		}
0x0396	0x0008      	RETURN
; end of _init
_updateLCD:
;Slave.c,98 :: 		void updateLCD()
;Slave.c,100 :: 		if (displej == 0)
0x0397	0x1283      	BCF        STATUS, 5
0x0398	0x1303      	BCF        STATUS, 6
0x0399	0x0828      	MOVF       _displej, 0
0x039A	0x3A00      	XORLW      0
0x039B	0x1D03      	BTFSS      STATUS, 2
0x039C	0x2BF3      	GOTO       L_updateLCD10
;Slave.c,102 :: 		LCD_Out(1, 1, "PI SM 02  DR TE ");
0x039D	0x3001      	MOVLW      1
0x039E	0x1683      	BSF        STATUS, 5
0x039F	0x00AA      	MOVWF      FARG_Lcd_Out_row
0x03A0	0x3001      	MOVLW      1
0x03A1	0x00AB      	MOVWF      FARG_Lcd_Out_column
0x03A2	0x305C      	MOVLW      ?lstr1_Slave
0x03A3	0x00AC      	MOVWF      FARG_Lcd_Out_text
0x03A4	0x21C3      	CALL       _Lcd_Out
;Slave.c,103 :: 		LCD_Out(2, 1, " X  X  X   X XX ");
0x03A5	0x3002      	MOVLW      2
0x03A6	0x00AA      	MOVWF      FARG_Lcd_Out_row
0x03A7	0x3001      	MOVLW      1
0x03A8	0x00AB      	MOVWF      FARG_Lcd_Out_column
0x03A9	0x304B      	MOVLW      ?lstr2_Slave
0x03AA	0x00AC      	MOVWF      FARG_Lcd_Out_text
0x03AB	0x21C3      	CALL       _Lcd_Out
;Slave.c,104 :: 		LCD_Chr(2, 2, m_bPir + 0x30);
0x03AC	0x3002      	MOVLW      2
0x03AD	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x03AE	0x3002      	MOVLW      2
0x03AF	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x03B0	0x3000      	MOVLW      0
0x03B1	0x1826      	BTFSC      _m_bPir, BitPos(_m_bPir+0)
0x03B2	0x3001      	MOVLW      1
0x03B3	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x03B4	0x3030      	MOVLW      48
0x03B5	0x07AC      	ADDWF      FARG_Lcd_Chr_out_char, 1
0x03B6	0x218C      	CALL       _Lcd_Chr
;Slave.c,105 :: 		LCD_Chr(2, 5, m_bSmoke + 0x30);
0x03B7	0x3002      	MOVLW      2
0x03B8	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x03B9	0x3005      	MOVLW      5
0x03BA	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x03BB	0x3000      	MOVLW      0
0x03BC	0x1B25      	BTFSC      _m_bSmoke, BitPos(_m_bSmoke+0)
0x03BD	0x3001      	MOVLW      1
0x03BE	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x03BF	0x3030      	MOVLW      48
0x03C0	0x07AC      	ADDWF      FARG_Lcd_Chr_out_char, 1
0x03C1	0x218C      	CALL       _Lcd_Chr
;Slave.c,106 :: 		LCD_Chr(2, 8, m_bO2 + 0x30);
0x03C2	0x3002      	MOVLW      2
0x03C3	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x03C4	0x3008      	MOVLW      8
0x03C5	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x03C6	0x3000      	MOVLW      0
0x03C7	0x18A6      	BTFSC      _m_bO2, BitPos(_m_bO2+0)
0x03C8	0x3001      	MOVLW      1
0x03C9	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x03CA	0x3030      	MOVLW      48
0x03CB	0x07AC      	ADDWF      FARG_Lcd_Chr_out_char, 1
0x03CC	0x218C      	CALL       _Lcd_Chr
;Slave.c,107 :: 		LCD_Chr(2, 12, m_bDrill + 0x30);
0x03CD	0x3002      	MOVLW      2
0x03CE	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x03CF	0x300C      	MOVLW      12
0x03D0	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x03D1	0x3000      	MOVLW      0
0x03D2	0x1AA5      	BTFSC      _m_bDrill, BitPos(_m_bDrill+0)
0x03D3	0x3001      	MOVLW      1
0x03D4	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x03D5	0x3030      	MOVLW      48
0x03D6	0x07AC      	ADDWF      FARG_Lcd_Chr_out_char, 1
0x03D7	0x218C      	CALL       _Lcd_Chr
;Slave.c,108 :: 		convert(Temperature);
0x03D8	0x1283      	BCF        STATUS, 5
0x03D9	0x0824      	MOVF       _Temperature, 0
0x03DA	0x1683      	BSF        STATUS, 5
0x03DB	0x00AA      	MOVWF      FARG_convert_number
0x03DC	0x2214      	CALL       _convert
;Slave.c,109 :: 		LCD_Chr(2, 14, X10 + 0x30);
0x03DD	0x3002      	MOVLW      2
0x03DE	0x1683      	BSF        STATUS, 5
0x03DF	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x03E0	0x300E      	MOVLW      14
0x03E1	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x03E2	0x3030      	MOVLW      48
0x03E3	0x1283      	BCF        STATUS, 5
0x03E4	0x0723      	ADDWF      _X10, 0
0x03E5	0x1683      	BSF        STATUS, 5
0x03E6	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x03E7	0x218C      	CALL       _Lcd_Chr
;Slave.c,110 :: 		LCD_Chr(2, 15, X1 + 0x30);
0x03E8	0x3002      	MOVLW      2
0x03E9	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x03EA	0x300F      	MOVLW      15
0x03EB	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x03EC	0x3030      	MOVLW      48
0x03ED	0x1283      	BCF        STATUS, 5
0x03EE	0x0722      	ADDWF      _X1, 0
0x03EF	0x1683      	BSF        STATUS, 5
0x03F0	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x03F1	0x218C      	CALL       _Lcd_Chr
;Slave.c,111 :: 		}
0x03F2	0x2C52      	GOTO       L_updateLCD11
L_updateLCD10:
0x03F3	0x1683      	BSF        STATUS, 5
;Slave.c,114 :: 		LCD_Out(1, 1, "GA VE DO  Z S TA");
0x03F4	0x3001      	MOVLW      1
0x03F5	0x00AA      	MOVWF      FARG_Lcd_Out_row
0x03F6	0x3001      	MOVLW      1
0x03F7	0x00AB      	MOVWF      FARG_Lcd_Out_column
0x03F8	0x3029      	MOVLW      ?lstr3_Slave
0x03F9	0x00AC      	MOVWF      FARG_Lcd_Out_text
0x03FA	0x21C3      	CALL       _Lcd_Out
;Slave.c,115 :: 		LCD_Out(2, 1, " X  X  X  X X XX");
0x03FB	0x3002      	MOVLW      2
0x03FC	0x00AA      	MOVWF      FARG_Lcd_Out_row
0x03FD	0x3001      	MOVLW      1
0x03FE	0x00AB      	MOVWF      FARG_Lcd_Out_column
0x03FF	0x303A      	MOVLW      ?lstr4_Slave
0x0400	0x00AC      	MOVWF      FARG_Lcd_Out_text
0x0401	0x21C3      	CALL       _Lcd_Out
;Slave.c,116 :: 		LCD_Chr(2, 2, m_bGas + 0x30);
0x0402	0x3002      	MOVLW      2
0x0403	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x0404	0x3002      	MOVLW      2
0x0405	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x0406	0x3000      	MOVLW      0
0x0407	0x1925      	BTFSC      _m_bGas, BitPos(_m_bGas+0)
0x0408	0x3001      	MOVLW      1
0x0409	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x040A	0x3030      	MOVLW      48
0x040B	0x07AC      	ADDWF      FARG_Lcd_Chr_out_char, 1
0x040C	0x218C      	CALL       _Lcd_Chr
;Slave.c,117 :: 		LCD_Chr(2, 5, m_bVent + 0x30);
0x040D	0x3002      	MOVLW      2
0x040E	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x040F	0x3005      	MOVLW      5
0x0410	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x0411	0x3000      	MOVLW      0
0x0412	0x1BA5      	BTFSC      _m_bVent, BitPos(_m_bVent+0)
0x0413	0x3001      	MOVLW      1
0x0414	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x0415	0x3030      	MOVLW      48
0x0416	0x07AC      	ADDWF      FARG_Lcd_Chr_out_char, 1
0x0417	0x218C      	CALL       _Lcd_Chr
;Slave.c,118 :: 		LCD_Chr(2, 8, m_bDoorOpen + 0x30);
0x0418	0x3002      	MOVLW      2
0x0419	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x041A	0x3008      	MOVLW      8
0x041B	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x041C	0x3000      	MOVLW      0
0x041D	0x1A25      	BTFSC      _m_bDoorOpen, BitPos(_m_bDoorOpen+0)
0x041E	0x3001      	MOVLW      1
0x041F	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x0420	0x3030      	MOVLW      48
0x0421	0x07AC      	ADDWF      FARG_Lcd_Chr_out_char, 1
0x0422	0x218C      	CALL       _Lcd_Chr
;Slave.c,119 :: 		LCD_Chr(2, 11, m_bSound + 0x30);
0x0423	0x3002      	MOVLW      2
0x0424	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x0425	0x300B      	MOVLW      11
0x0426	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x0427	0x3000      	MOVLW      0
0x0428	0x19A5      	BTFSC      _m_bSound, BitPos(_m_bSound+0)
0x0429	0x3001      	MOVLW      1
0x042A	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x042B	0x3030      	MOVLW      48
0x042C	0x07AC      	ADDWF      FARG_Lcd_Chr_out_char, 1
0x042D	0x218C      	CALL       _Lcd_Chr
;Slave.c,120 :: 		LCD_Chr(2, 13, State + 0x30);
0x042E	0x3002      	MOVLW      2
0x042F	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x0430	0x300D      	MOVLW      13
0x0431	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x0432	0x3030      	MOVLW      48
0x0433	0x1283      	BCF        STATUS, 5
0x0434	0x0726      	ADDWF      _State, 0
0x0435	0x1683      	BSF        STATUS, 5
0x0436	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x0437	0x218C      	CALL       _Lcd_Chr
;Slave.c,121 :: 		convert(Tajmer);
0x0438	0x1283      	BCF        STATUS, 5
0x0439	0x0827      	MOVF       _Tajmer, 0
0x043A	0x1683      	BSF        STATUS, 5
0x043B	0x00AA      	MOVWF      FARG_convert_number
0x043C	0x2214      	CALL       _convert
;Slave.c,122 :: 		LCD_Chr(2, 15, X10 + 0x30);
0x043D	0x3002      	MOVLW      2
0x043E	0x1683      	BSF        STATUS, 5
0x043F	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x0440	0x300F      	MOVLW      15
0x0441	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x0442	0x3030      	MOVLW      48
0x0443	0x1283      	BCF        STATUS, 5
0x0444	0x0723      	ADDWF      _X10, 0
0x0445	0x1683      	BSF        STATUS, 5
0x0446	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x0447	0x218C      	CALL       _Lcd_Chr
;Slave.c,123 :: 		LCD_Chr(2, 16, X1 + 0x30);
0x0448	0x3002      	MOVLW      2
0x0449	0x00AA      	MOVWF      FARG_Lcd_Chr_row
0x044A	0x3010      	MOVLW      16
0x044B	0x00AB      	MOVWF      FARG_Lcd_Chr_column
0x044C	0x3030      	MOVLW      48
0x044D	0x1283      	BCF        STATUS, 5
0x044E	0x0722      	ADDWF      _X1, 0
0x044F	0x1683      	BSF        STATUS, 5
0x0450	0x00AC      	MOVWF      FARG_Lcd_Chr_out_char
0x0451	0x218C      	CALL       _Lcd_Chr
;Slave.c,124 :: 		}
L_updateLCD11:
;Slave.c,125 :: 		}
0x0452	0x0008      	RETURN
; end of _updateLCD
_main:
0x0453	0x24FC      	CALL       1276
;Slave.c,342 :: 		void main()
;Slave.c,344 :: 		init();
0x0454	0x2360      	CALL       _init
;Slave.c,345 :: 		init_variables();
0x0455	0x222D      	CALL       _init_variables
;Slave.c,346 :: 		processInputs();
0x0456	0x2244      	CALL       _processInputs
;Slave.c,347 :: 		updateLCD();
0x0457	0x2397      	CALL       _updateLCD
;Slave.c,348 :: 		while (1)
L_main77:
0x0458	0x1683      	BSF        STATUS, 5
;Slave.c,350 :: 		if (Flag1 == 1)
0x0459	0x1CA5      	BTFSS      _Flag1, BitPos(_Flag1+0)
0x045A	0x2C5E      	GOTO       L_main79
;Slave.c,352 :: 		Flag1 = 0; // prosla jedna sec
0x045B	0x10A5      	BCF        _Flag1, BitPos(_Flag1+0)
;Slave.c,353 :: 		processInputs();
0x045C	0x2244      	CALL       _processInputs
;Slave.c,354 :: 		updateLCD();
0x045D	0x2397      	CALL       _updateLCD
;Slave.c,355 :: 		}
L_main79:
;Slave.c,356 :: 		if (CallFlag == 1)
0x045E	0x1C25      	BTFSS      _CallFlag, BitPos(_CallFlag+0)
0x045F	0x2CA4      	GOTO       L_main80
;Slave.c,359 :: 		CallFlag = 0;
0x0460	0x1025      	BCF        _CallFlag, BitPos(_CallFlag+0)
;Slave.c,360 :: 		DR = 1;
0x0461	0x1283      	BCF        STATUS, 5
0x0462	0x1687      	BSF        PORTC, 5
;Slave.c,361 :: 		transmitByte(Command);
0x0463	0x086D      	MOVF       _Command, 0
0x0464	0x1683      	BSF        STATUS, 5
0x0465	0x00A9      	MOVWF      FARG_transmitByte_bajt
0x0466	0x2223      	CALL       _transmitByte
;Slave.c,362 :: 		byteX = 0x00;
0x0467	0x1283      	BCF        STATUS, 5
0x0468	0x01A5      	CLRF       _byteX
;Slave.c,363 :: 		if (m_bPir == 1)
0x0469	0x1683      	BSF        STATUS, 5
0x046A	0x1C26      	BTFSS      _m_bPir, BitPos(_m_bPir+0)
0x046B	0x2C6F      	GOTO       L_main81
;Slave.c,364 :: 		byteX = byteX + 8;
0x046C	0x3008      	MOVLW      8
0x046D	0x1283      	BCF        STATUS, 5
0x046E	0x07A5      	ADDWF      _byteX, 1
L_main81:
;Slave.c,365 :: 		if (m_bSmoke == 1)
0x046F	0x1683      	BSF        STATUS, 5
0x0470	0x1F25      	BTFSS      _m_bSmoke, BitPos(_m_bSmoke+0)
0x0471	0x2C75      	GOTO       L_main82
;Slave.c,366 :: 		byteX = byteX + 4;
0x0472	0x3004      	MOVLW      4
0x0473	0x1283      	BCF        STATUS, 5
0x0474	0x07A5      	ADDWF      _byteX, 1
L_main82:
;Slave.c,367 :: 		if (m_bO2 == 1)
0x0475	0x1683      	BSF        STATUS, 5
0x0476	0x1CA6      	BTFSS      _m_bO2, BitPos(_m_bO2+0)
0x0477	0x2C7B      	GOTO       L_main83
;Slave.c,368 :: 		byteX = byteX + 2;
0x0478	0x3002      	MOVLW      2
0x0479	0x1283      	BCF        STATUS, 5
0x047A	0x07A5      	ADDWF      _byteX, 1
L_main83:
;Slave.c,369 :: 		if (m_bDrill == 1)
0x047B	0x1683      	BSF        STATUS, 5
0x047C	0x1EA5      	BTFSS      _m_bDrill, BitPos(_m_bDrill+0)
0x047D	0x2C80      	GOTO       L_main84
;Slave.c,370 :: 		byteX = byteX + 1;
0x047E	0x1283      	BCF        STATUS, 5
0x047F	0x0AA5      	INCF       _byteX, 1
L_main84:
;Slave.c,371 :: 		if (m_bSound == 1)
0x0480	0x1683      	BSF        STATUS, 5
0x0481	0x1DA5      	BTFSS      _m_bSound, BitPos(_m_bSound+0)
0x0482	0x2C86      	GOTO       L_main85
;Slave.c,372 :: 		byteX = byteX + 16;
0x0483	0x3010      	MOVLW      16
0x0484	0x1283      	BCF        STATUS, 5
0x0485	0x07A5      	ADDWF      _byteX, 1
L_main85:
;Slave.c,373 :: 		if (m_bDoorOpen == 1)
0x0486	0x1683      	BSF        STATUS, 5
0x0487	0x1E25      	BTFSS      _m_bDoorOpen, BitPos(_m_bDoorOpen+0)
0x0488	0x2C8C      	GOTO       L_main86
;Slave.c,374 :: 		byteX = byteX + 32;
0x0489	0x3020      	MOVLW      32
0x048A	0x1283      	BCF        STATUS, 5
0x048B	0x07A5      	ADDWF      _byteX, 1
L_main86:
;Slave.c,375 :: 		if (m_bVent == 1)
0x048C	0x1683      	BSF        STATUS, 5
0x048D	0x1FA5      	BTFSS      _m_bVent, BitPos(_m_bVent+0)
0x048E	0x2C92      	GOTO       L_main87
;Slave.c,376 :: 		byteX = byteX + 64;
0x048F	0x3040      	MOVLW      64
0x0490	0x1283      	BCF        STATUS, 5
0x0491	0x07A5      	ADDWF      _byteX, 1
L_main87:
;Slave.c,377 :: 		if (m_bGas == 1)
0x0492	0x1683      	BSF        STATUS, 5
0x0493	0x1D25      	BTFSS      _m_bGas, BitPos(_m_bGas+0)
0x0494	0x2C98      	GOTO       L_main88
;Slave.c,378 :: 		byteX = byteX + 128;
0x0495	0x3080      	MOVLW      128
0x0496	0x1283      	BCF        STATUS, 5
0x0497	0x07A5      	ADDWF      _byteX, 1
L_main88:
0x0498	0x1283      	BCF        STATUS, 5
;Slave.c,379 :: 		transmitByte(byteX);
0x0499	0x0825      	MOVF       _byteX, 0
0x049A	0x1683      	BSF        STATUS, 5
0x049B	0x00A9      	MOVWF      FARG_transmitByte_bajt
0x049C	0x2223      	CALL       _transmitByte
;Slave.c,380 :: 		transmitByte(Temperature);
0x049D	0x1283      	BCF        STATUS, 5
0x049E	0x0824      	MOVF       _Temperature, 0
0x049F	0x1683      	BSF        STATUS, 5
0x04A0	0x00A9      	MOVWF      FARG_transmitByte_bajt
0x04A1	0x2223      	CALL       _transmitByte
;Slave.c,381 :: 		DR = 0;
0x04A2	0x1283      	BCF        STATUS, 5
0x04A3	0x1287      	BCF        PORTC, 5
;Slave.c,382 :: 		}
L_main80:
;Slave.c,383 :: 		}
0x04A4	0x2C58      	GOTO       L_main77
;Slave.c,384 :: 		}
0x04A5	0x2CA5      	GOTO       $+0
; end of _main
0x04FC	0x3022      	MOVLW      34
0x04FD	0x0084      	MOVWF      FSR
0x04FE	0x304E      	MOVLW      78
0x04FF	0x1283      	BCF        STATUS, 5
0x0500	0x1303      	BCF        STATUS, 6
0x0501	0x00F0      	MOVWF      R0
0x0502	0x30AB      	MOVLW      171
0x0503	0x1683      	BSF        STATUS, 5
0x0504	0x00A3      	MOVWF      ___DoICPAddr
0x0505	0x3004      	MOVLW      4
0x0506	0x00A4      	MOVWF      164
0x0507	0x2354      	CALL       852
0x0508	0x30A0      	MOVLW      160
0x0509	0x0084      	MOVWF      FSR
0x050A	0x3003      	MOVLW      3
0x050B	0x00F0      	MOVWF      R0
0x050C	0x30F9      	MOVLW      249
0x050D	0x1683      	BSF        STATUS, 5
0x050E	0x00A3      	MOVWF      ___DoICPAddr
0x050F	0x3004      	MOVLW      4
0x0510	0x00A4      	MOVWF      164
0x0511	0x2354      	CALL       852
0x0512	0x0008      	RETURN
;Slave.c,0 :: ?ICS_X1
0x04AB	0x3400 ;?ICS_X1+0
; end of ?ICS_X1
;Slave.c,0 :: ?ICS_X10
0x04AC	0x3400 ;?ICS_X10+0
; end of ?ICS_X10
;Slave.c,0 :: ?ICS_Temperature
0x04AD	0x3400 ;?ICS_Temperature+0
; end of ?ICS_Temperature
;Slave.c,0 :: ?ICS_byteX
0x04AE	0x3400 ;?ICS_byteX+0
; end of ?ICS_byteX
;Slave.c,0 :: ?ICS_State
0x04AF	0x3400 ;?ICS_State+0
; end of ?ICS_State
;Slave.c,0 :: ?ICS_Tajmer
0x04B0	0x3400 ;?ICS_Tajmer+0
; end of ?ICS_Tajmer
;Slave.c,0 :: ?ICS_displej
0x04B1	0x3400 ;?ICS_displej+0
; end of ?ICS_displej
;Slave.c,0 :: ?ICS?lstr3_Slave
0x04B2	0x3447 ;?ICS?lstr3_Slave+0
0x04B3	0x3441 ;?ICS?lstr3_Slave+1
0x04B4	0x3420 ;?ICS?lstr3_Slave+2
0x04B5	0x3456 ;?ICS?lstr3_Slave+3
0x04B6	0x3445 ;?ICS?lstr3_Slave+4
0x04B7	0x3420 ;?ICS?lstr3_Slave+5
0x04B8	0x3444 ;?ICS?lstr3_Slave+6
0x04B9	0x344F ;?ICS?lstr3_Slave+7
0x04BA	0x3420 ;?ICS?lstr3_Slave+8
0x04BB	0x3420 ;?ICS?lstr3_Slave+9
0x04BC	0x345A ;?ICS?lstr3_Slave+10
0x04BD	0x3420 ;?ICS?lstr3_Slave+11
0x04BE	0x3453 ;?ICS?lstr3_Slave+12
0x04BF	0x3420 ;?ICS?lstr3_Slave+13
0x04C0	0x3454 ;?ICS?lstr3_Slave+14
0x04C1	0x3441 ;?ICS?lstr3_Slave+15
0x04C2	0x3400 ;?ICS?lstr3_Slave+16
; end of ?ICS?lstr3_Slave
;Slave.c,0 :: ?ICS?lstr4_Slave
0x04C3	0x3420 ;?ICS?lstr4_Slave+0
0x04C4	0x3458 ;?ICS?lstr4_Slave+1
0x04C5	0x3420 ;?ICS?lstr4_Slave+2
0x04C6	0x3420 ;?ICS?lstr4_Slave+3
0x04C7	0x3458 ;?ICS?lstr4_Slave+4
0x04C8	0x3420 ;?ICS?lstr4_Slave+5
0x04C9	0x3420 ;?ICS?lstr4_Slave+6
0x04CA	0x3458 ;?ICS?lstr4_Slave+7
0x04CB	0x3420 ;?ICS?lstr4_Slave+8
0x04CC	0x3420 ;?ICS?lstr4_Slave+9
0x04CD	0x3458 ;?ICS?lstr4_Slave+10
0x04CE	0x3420 ;?ICS?lstr4_Slave+11
0x04CF	0x3458 ;?ICS?lstr4_Slave+12
0x04D0	0x3420 ;?ICS?lstr4_Slave+13
0x04D1	0x3458 ;?ICS?lstr4_Slave+14
0x04D2	0x3458 ;?ICS?lstr4_Slave+15
0x04D3	0x3400 ;?ICS?lstr4_Slave+16
; end of ?ICS?lstr4_Slave
;Slave.c,0 :: ?ICS?lstr2_Slave
0x04D4	0x3420 ;?ICS?lstr2_Slave+0
0x04D5	0x3458 ;?ICS?lstr2_Slave+1
0x04D6	0x3420 ;?ICS?lstr2_Slave+2
0x04D7	0x3420 ;?ICS?lstr2_Slave+3
0x04D8	0x3458 ;?ICS?lstr2_Slave+4
0x04D9	0x3420 ;?ICS?lstr2_Slave+5
0x04DA	0x3420 ;?ICS?lstr2_Slave+6
0x04DB	0x3458 ;?ICS?lstr2_Slave+7
0x04DC	0x3420 ;?ICS?lstr2_Slave+8
0x04DD	0x3420 ;?ICS?lstr2_Slave+9
0x04DE	0x3420 ;?ICS?lstr2_Slave+10
0x04DF	0x3458 ;?ICS?lstr2_Slave+11
0x04E0	0x3420 ;?ICS?lstr2_Slave+12
0x04E1	0x3458 ;?ICS?lstr2_Slave+13
0x04E2	0x3458 ;?ICS?lstr2_Slave+14
0x04E3	0x3420 ;?ICS?lstr2_Slave+15
0x04E4	0x3400 ;?ICS?lstr2_Slave+16
; end of ?ICS?lstr2_Slave
;Slave.c,0 :: ?ICS?lstr1_Slave
0x04E5	0x3450 ;?ICS?lstr1_Slave+0
0x04E6	0x3449 ;?ICS?lstr1_Slave+1
0x04E7	0x3420 ;?ICS?lstr1_Slave+2
0x04E8	0x3453 ;?ICS?lstr1_Slave+3
0x04E9	0x344D ;?ICS?lstr1_Slave+4
0x04EA	0x3420 ;?ICS?lstr1_Slave+5
0x04EB	0x3430 ;?ICS?lstr1_Slave+6
0x04EC	0x3432 ;?ICS?lstr1_Slave+7
0x04ED	0x3420 ;?ICS?lstr1_Slave+8
0x04EE	0x3420 ;?ICS?lstr1_Slave+9
0x04EF	0x3444 ;?ICS?lstr1_Slave+10
0x04F0	0x3452 ;?ICS?lstr1_Slave+11
0x04F1	0x3420 ;?ICS?lstr1_Slave+12
0x04F2	0x3454 ;?ICS?lstr1_Slave+13
0x04F3	0x3445 ;?ICS?lstr1_Slave+14
0x04F4	0x3420 ;?ICS?lstr1_Slave+15
0x04F5	0x3400 ;?ICS?lstr1_Slave+16
; end of ?ICS?lstr1_Slave
;Slave.c,0 :: ?ICS_Command
0x04F6	0x3400 ;?ICS_Command+0
0x04F7	0x3400 ;?ICS_Command+1
; end of ?ICS_Command
;Slave.c,0 :: ?ICS_ch
0x04F8	0x3400 ;?ICS_ch+0
; end of ?ICS_ch
;Slave.c,0 :: ?ICS_RAMP_ID
0x04F9	0x3400 ;?ICS_RAMP_ID+0
; end of ?ICS_RAMP_ID
;Slave.c,0 :: ?ICS_tt
0x04FA	0x3400 ;?ICS_tt+0
; end of ?ICS_tt
;Slave.c,0 :: ?ICS_br
0x04FB	0x3400 ;?ICS_br+0
; end of ?ICS_br
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [100]    _interrupt
0x0068       [6]    _Delay_1us
0x006E      [13]    _Delay_5500us
0x007B       [7]    _Delay_50us
0x0082      [94]    _Lcd_Cmd
0x00E0       [9]    _Lcd_Chr_CP
0x00E9      [77]    _ad_convert
0x0136      [79]    _Lcd_Init
0x0185       [7]    _____DoICP
0x018C      [55]    _Lcd_Chr
0x01C3      [65]    _Lcd_Out
0x0204      [16]    _UART1_Init
0x0214      [15]    _convert
0x0223      [10]    _transmitByte
0x022D      [23]    _init_variables
0x0244     [272]    _processInputs
0x0354      [12]    ___CC2DW
0x0360      [55]    _init
0x0397     [188]    _updateLCD
0x0453      [82]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    Z_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    IRP_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    RP1_bit
0x0003       [0]    RP0_bit
0x0003       [0]    DC_bit
0x0003       [0]    C_bit
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0004       [1]    FSRPTR
0x0005       [0]    RA2_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA4_bit
0x0005       [1]    PORTA
0x0005       [0]    RA3_bit
0x0005       [0]    RA5_bit
0x0006       [1]    PORTB
0x0006       [0]    RB2_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB0_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC3_bit
0x0007       [0]    RC5_bit
0x0007       [0]    RC7_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC2_bit
0x0007       [0]    LCD_EN
0x0007       [0]    LCD_RS
0x0007       [1]    PORTC
0x0007       [0]    RC1_bit
0x0007       [0]    RC0_bit
0x0008       [0]    RD4_bit
0x0008       [0]    RD3_bit
0x0008       [0]    RD2_bit
0x0008       [0]    RD7_bit
0x0008       [0]    RD6_bit
0x0008       [0]    RD5_bit
0x0008       [0]    RD1_bit
0x0008       [0]    LCD_D5
0x0008       [0]    LCD_D6
0x0008       [0]    LCD_D7
0x0008       [0]    RD0_bit
0x0008       [1]    PORTD
0x0008       [0]    LCD_D4
0x0009       [1]    PORTE
0x0009       [0]    RE1_bit
0x0009       [0]    RE2_bit
0x0009       [0]    RE0_bit
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    T0IF_bit
0x000B       [1]    INTCON
0x000B       [0]    RBIE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    INTE_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    TMR0IF_bit
0x000B       [0]    RBIF_bit
0x000C       [0]    SSPIF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [1]    PIR1
0x000C       [0]    TMR1IF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    ADIF_bit
0x000C       [0]    PSPIF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    RCIF_bit
0x000D       [0]    EEIF_bit
0x000D       [0]    CMIF_bit
0x000D       [1]    PIR2
0x000D       [0]    CCP2IF_bit
0x000D       [0]    BCLIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1SYNC_bit
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1CS_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    TMR1ON_bit
0x0010       [1]    T1CON
0x0011       [1]    TMR2
0x0012       [1]    T2CON
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS0_bit
0x0013       [1]    SSPBUF
0x0014       [0]    SSPM2_bit
0x0014       [0]    SSPM3_bit
0x0014       [0]    SSPOV_bit
0x0014       [0]    CKP_bit
0x0014       [0]    WCOL_bit
0x0014       [0]    SSPEN_bit
0x0014       [0]    SSPM0_bit
0x0014       [0]    SSPM1_bit
0x0014       [1]    SSPCON
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1M2_bit
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1M1_bit
0x0018       [0]    RC8_9_bit
0x0018       [1]    RCSTA
0x0018       [0]    SPEN_bit
0x0018       [0]    SREN_bit
0x0018       [0]    OERR_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    RX9_bit
0x0018       [0]    RCD8_bit
0x0018       [0]    ADDEN_bit
0x0018       [0]    CREN_bit
0x0018       [0]    RC9_bit
0x0018       [0]    FERR_bit
0x0018       [0]    NOT_RC8_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001B       [2]    CCPR2
0x001C       [1]    CCPR2H
0x001D       [0]    CCP2X_bit
0x001D       [0]    CCP2M1_bit
0x001D       [0]    CCP2M0_bit
0x001D       [0]    CCP2M2_bit
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2Y_bit
0x001D       [0]    CCP2M3_bit
0x001E       [1]    ADRESH
0x001F       [0]    ADCS0_bit
0x001F       [0]    NOT_DONE_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    GO_NOT_DONE_bit
0x001F       [0]    ADCS1_bit
0x001F       [1]    ADCON0
0x001F       [0]    ADON_bit
0x001F       [0]    CHS1_bit
0x001F       [0]    CHS2_bit
0x001F       [0]    CHS0_bit
0x001F       [0]    GO_bit
0x0022       [1]    _X1
0x0023       [1]    _X10
0x0024       [1]    _Temperature
0x0025       [1]    _byteX
0x0026       [1]    _State
0x0027       [1]    _Tajmer
0x0028       [1]    _displej
0x0029      [17]    ?lstr3_Slave
0x003A      [17]    ?lstr4_Slave
0x004B      [17]    ?lstr2_Slave
0x005C      [17]    ?lstr1_Slave
0x006D       [2]    _Command
0x006F       [1]    _ch
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    PSA_bit
0x0081       [0]    PS0_bit
0x0081       [0]    PS1_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    PS2_bit
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    T0CS_bit
0x0081       [1]    OPTION_REG
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA5_bit
0x0085       [1]    TRISA
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB0_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB4_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC0_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC7_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    LCD_RS_Direction
0x0087       [0]    LCD_EN_Direction
0x0088       [0]    TRISD7_bit
0x0088       [1]    TRISD
0x0088       [0]    TRISD5_bit
0x0088       [0]    TRISD6_bit
0x0088       [0]    LCD_D6_Direction
0x0088       [0]    LCD_D7_Direction
0x0088       [0]    LCD_D5_Direction
0x0088       [0]    TRISD0_bit
0x0088       [0]    LCD_D4_Direction
0x0088       [0]    TRISD4_bit
0x0088       [0]    TRISD3_bit
0x0088       [0]    TRISD2_bit
0x0088       [0]    TRISD1_bit
0x0089       [0]    TRISE1_bit
0x0089       [0]    TRISE2_bit
0x0089       [0]    IBOV_bit
0x0089       [0]    PSPMODE_bit
0x0089       [0]    IBF_bit
0x0089       [0]    OBF_bit
0x0089       [0]    TRISE0_bit
0x0089       [0]    PSPMODE_TRISE_bit
0x0089       [1]    TRISE
0x0089       [0]    IBF_TRISE_bit
0x0089       [0]    OBF_TRISE_bit
0x0089       [0]    IBOV_TRISE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    ADIE_bit
0x008C       [0]    TXIE_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    PSPIE_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    SSPIE_bit
0x008C       [0]    TMR1IE_bit
0x008D       [0]    CMIE_bit
0x008D       [0]    EEIE_bit
0x008D       [1]    PIE2
0x008D       [0]    CCP2IE_bit
0x008D       [0]    BCLIE_bit
0x008E       [0]    NOT_POR_bit
0x008E       [0]    NOT_BO_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_BOR_bit
0x0091       [0]    ACKEN_bit
0x0091       [0]    PEN_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    GCEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [0]    ACKDT_bit
0x0091       [1]    SSPCON2
0x0091       [0]    SEN_bit
0x0091       [0]    RSEN_bit
0x0092       [1]    PR2
0x0093       [1]    SSPADD
0x0094       [0]    NOT_W_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    READ_WRITE_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    D_A_bit
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    R_W_bit
0x0094       [0]    I2C_READ_bit
0x0094       [0]    R_NOT_W_bit
0x0094       [0]    S_bit
0x0094       [0]    UA_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    BF_bit
0x0094       [0]    P_bit
0x0094       [0]    R_bit
0x0094       [0]    D_bit
0x0094       [0]    SMP_bit
0x0094       [0]    D_NOT_A_bit
0x0094       [0]    CKE_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    TX9_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    TX8_9_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    TXD8_bit
0x0098       [1]    TXSTA
0x0098       [0]    TX9D_bit
0x0098       [0]    TRMT_bit
0x0099       [1]    SPBRG
0x009C       [0]    C2INV_bit
0x009C       [0]    C1OUT_bit
0x009C       [0]    CM0_bit
0x009C       [0]    C2OUT_bit
0x009C       [0]    CM2_bit
0x009C       [0]    CM1_bit
0x009C       [1]    CMCON
0x009C       [0]    CIS_bit
0x009C       [0]    C1INV_bit
0x009D       [0]    CVR0_bit
0x009D       [0]    CVREN_bit
0x009D       [0]    CVR3_bit
0x009D       [0]    CVR2_bit
0x009D       [0]    CVR1_bit
0x009D       [1]    CVRCON
0x009D       [0]    CVRR_bit
0x009D       [0]    CVROE_bit
0x009E       [1]    ADRESL
0x009F       [0]    PCFG1_bit
0x009F       [0]    PCFG2_bit
0x009F       [0]    PCFG3_bit
0x009F       [0]    PCFG0_bit
0x009F       [1]    ADCON1
0x009F       [0]    ADCS2_bit
0x009F       [0]    ADFM_bit
0x00A0       [1]    _RAMP_ID
0x00A1       [1]    _tt
0x00A2       [1]    _br
0x00A3       [2]    ___DoICPAddr
0x00A5       [0]    _m_bSmoke
0x00A5       [0]    _m_bDrill
0x00A5       [0]    _Flag1
0x00A5       [0]    _CallFlag
0x00A5       [0]    _m_bGas
0x00A5       [0]    _m_bVent
0x00A5       [0]    _m_bDoorOpen
0x00A5       [0]    _m_bSound
0x00A6       [0]    __Lib_Lcd_cmd_status
0x00A6       [0]    _m_bO2
0x00A6       [0]    _m_bPir
0x00A7       [1]    ___saveSTATUS
0x00A8       [1]    ___savePCLATH
0x00A9       [1]    FARG_transmitByte_bajt
0x00AA       [1]    FARG_Lcd_Chr_row
0x00AA       [1]    FARG_Lcd_Out_row
0x00AA       [1]    FARG_convert_number
0x00AA       [2]    ad_convert_temp_L0
0x00AB       [1]    FARG_Lcd_Chr_column
0x00AB       [1]    FARG_Lcd_Out_column
0x00AC       [2]    ad_convert_i_L0
0x00AC       [1]    FARG_Lcd_Out_text
0x00AC       [1]    FARG_Lcd_Chr_out_char
0x00AD       [1]    Lcd_Out_i_L0
0x00AE       [1]    FARG_Lcd_Chr_CP_out_char
0x00AF       [1]    FARG_Lcd_Cmd_out_char
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x018C       [0]    WR_bit
0x018C       [1]    EECON1
0x018C       [0]    RD_bit
0x018C       [0]    WRERR_bit
0x018C       [0]    EEPGD_bit
0x018C       [0]    WREN_bit
0x018D       [1]    EECON2
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x04AB       [1]    ?ICS_X1
0x04AC       [1]    ?ICS_X10
0x04AD       [1]    ?ICS_Temperature
0x04AE       [1]    ?ICS_byteX
0x04AF       [1]    ?ICS_State
0x04B0       [1]    ?ICS_Tajmer
0x04B1       [1]    ?ICS_displej
0x04B2      [17]    ?ICS?lstr3_Slave
0x04C3      [17]    ?ICS?lstr4_Slave
0x04D4      [17]    ?ICS?lstr2_Slave
0x04E5      [17]    ?ICS?lstr1_Slave
0x04F6       [2]    ?ICS_Command
0x04F8       [1]    ?ICS_ch
0x04F9       [1]    ?ICS_RAMP_ID
0x04FA       [1]    ?ICS_tt
0x04FB       [1]    ?ICS_br
//** Label List: ** 
//----------------------------------------------
  L_transmitByte0
  L_transmitByte1
  L_ad_convert2
  L_ad_convert3
  L_ad_convert4
  L_ad_convert5
  L_ad_convert6
  L_ad_convert7
  L_convert8
  L_convert9
  L_updateLCD10
  L_updateLCD11
  L_processInputs12
  L_processInputs13
  L_processInputs14
  L_processInputs15
  L_processInputs16
  L_processInputs17
  L_processInputs18
  L_processInputs19
  L_processInputs20
  L_processInputs21
  L_processInputs22
  L_processInputs23
  L_processInputs24
  L_processInputs25
  L_processInputs26
  L_processInputs27
  L_processInputs28
  L_processInputs29
  L_processInputs30
  L_processInputs31
  L_processInputs32
  L_processInputs33
  L_processInputs34
  L_processInputs35
  L_processInputs36
  L_processInputs37
  L_processInputs38
  L_processInputs39
  L_processInputs40
  L_processInputs41
  L_processInputs42
  L_processInputs43
  L_processInputs44
  L_processInputs45
  L_processInputs46
  L_processInputs47
  L_processInputs48
  L_processInputs49
  L_processInputs50
  L_processInputs51
  L_processInputs52
  L_processInputs53
  L_processInputs54
  L_processInputs55
  L_processInputs56
  L_processInputs57
  L_processInputs58
  L_processInputs59
  L_interrupt60
  L_interrupt61
  L_interrupt62
  L_interrupt63
  L_interrupt64
  L_interrupt65
  L_interrupt66
  L_interrupt67
  L_interrupt68
  L_interrupt69
  L_interrupt70
  L_interrupt71
  L_interrupt72
  L_interrupt73
  L_interrupt74
  L_interrupt75
  L_interrupt76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L_main83
  L_main84
  L_main85
  L_main86
  L_main87
  L_main88
  L__processInputs89
  L__processInputs90
  L__processInputs91
  L__processInputs92
  L__processInputs93
  L__processInputs94
  L__processInputs95
  L__processInputs96
  L__interrupt97
  L__interrupt98
  L__interrupt99
  L__interrupt100
  _transmitByte
  _ad_convert
  L__ad_convert101
  L__ad_convert102
  _convert
  _updateLCD
  _processInputs
  L__processInputs103
  L__processInputs104
  L__processInputs105
  L__processInputs106
  L__processInputs107
  L__processInputs108
  L__processInputs109
  L__processInputs110
  L__processInputs111
  L__processInputs112
  L__processInputs113
  L__processInputs114
  L__processInputs115
  L__processInputs116
  _init
  _init_variables
  _interrupt
  L__interrupt117
  _main
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_1ms
  _Delay_5ms
  _Delay_8ms
  _Delay_10ms
  _Delay_100ms
  _Delay_1sec
  _boot16_Delay_5ms
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms21
  L__VDelay_ms22
  L__VDelay_ms23
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms24
  L__VDelay_Advanced_ms25
  L__VDelay_Advanced_ms26
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  L_end_Lcd_Cmd
  _Lcd_Cmd
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  L__Lcd_Cmd40
  L_end_Lcd_Chr_CP
  _Lcd_Chr_CP
  L_end_Lcd_Out_CP
  _Lcd_Out_CP
  L_end_Lcd_Chr
  _Lcd_Chr
  L_end_Lcd_Init
  _Lcd_Init
  L_end_Lcd_Out
  _Lcd_Out
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_transmitByte0
  L_transmitByte1
  L_ad_convert2
  L_ad_convert3
  L_ad_convert4
  L_ad_convert5
  L_ad_convert6
  L_ad_convert7
  L_convert8
  L_convert9
  L_updateLCD10
  L_updateLCD11
  L_processInputs12
  L_processInputs13
  L_processInputs14
  L_processInputs15
  L_processInputs16
  L_processInputs17
  L_processInputs18
  L_processInputs19
  L_processInputs20
  L_processInputs21
  L_processInputs22
  L_processInputs23
  L_processInputs24
  L_processInputs25
  L_processInputs26
  L_processInputs27
  L_processInputs28
  L_processInputs29
  L_processInputs30
  L_processInputs31
  L_processInputs32
  L_processInputs33
  L_processInputs34
  L_processInputs35
  L_processInputs36
  L_processInputs37
  L_processInputs38
  L_processInputs39
  L_processInputs40
  L_processInputs41
  L_processInputs42
  L_processInputs43
  L_processInputs44
  L_processInputs45
  L_processInputs46
  L_processInputs47
  L_processInputs48
  L_processInputs49
  L_processInputs50
  L_processInputs51
  L_processInputs52
  L_processInputs53
  L_processInputs54
  L_processInputs55
  L_processInputs56
  L_processInputs57
  L_processInputs58
  L_processInputs59
  L_interrupt60
  L_interrupt61
  L_interrupt62
  L_interrupt63
  L_interrupt64
  L_interrupt65
  L_interrupt66
  L_interrupt67
  L_interrupt68
  L_interrupt69
  L_interrupt70
  L_interrupt71
  L_interrupt72
  L_interrupt73
  L_interrupt74
  L_interrupt75
  L_interrupt76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L_main83
  L_main84
  L_main85
  L_main86
  L_main87
  L_main88
  L__processInputs89
  L__processInputs90
  L__processInputs91
  L__processInputs92
  L__processInputs93
  L__processInputs94
  L__processInputs95
  L__processInputs96
  L__interrupt97
  L__interrupt98
  L__interrupt99
  L__interrupt100
  _transmitByte
  _ad_convert
  L__ad_convert101
  L__ad_convert102
  _convert
  _updateLCD
  _processInputs
  L__processInputs103
  L__processInputs104
  L__processInputs105
  L__processInputs106
  L__processInputs107
  L__processInputs108
  L__processInputs109
  L__processInputs110
  L__processInputs111
  L__processInputs112
  L__processInputs113
  L__processInputs114
  L__processInputs115
  L__processInputs116
  _init
  _init_variables
  _interrupt
  L__interrupt117
  _main
